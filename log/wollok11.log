{"errors":{"errors":[null,["/*\r","describe \"Venta mercado\" {\r","test \"venta\" {\r","personaje.position(game.at(2,2))\r","personaje.sembrarMaiz()\r","personaje.regar()\r","personaje.cosechar()\r","var nuevoMercado = new Mercado(position = game.at(1,1), monedas = 1000)\r","game.addVisual(nuevoMercado)\r","personaje.position(game.at(1,1))\r","personaje.vender()\r","assert.that(personaje.cantidadDeMonedas() == 150)\r","assert.that(personaje.listaDeVenta().isEmpty())\r","assert.that(nuevoMercado.monedas() == 850)\r","}\r","//////////////////////////////////////////////////////////////////////\r","/////////////////////////////////////////////////////////////////////\r","describe \"Camión cargando y descargando vehículos\" {\r","test \"Carga y descarga del camion\" {\r","// Carga inicial de bumblebee\r","camion.cargar(bumblebee) \r","assert.equals(#{bumblebee}, camion.cosas())\r","// Carga adicional de Knight Rider\r","camion.cargar(knightRider)\r","assert.equals(#{bumblebee, knightRider}, camion.cosas())\r","// Descarga de bumblebee\r","camion.descargar(bumblebee)\r","assert.equals(#{knightRider}, camion.cosas())\r","// Intento de carga duplicada de Knight Rider\r","assert.throwsException({camion.cargar(knightRider)})\r","// Intento de descarga de bumblebee cuando no está\r","assert.throwsException({camion.descargar(bumblebee)})\r","}\r","}\r","describe \"Validación de pesos en el camión\"{\r","test \"Todo peso par\" {\r","arenaAGranel.peso(50)\r","camion.cargar(bumblebee)\r","camion.cargar(arenaAGranel)\r","assert.that(camion.todoPesoEsPar())\r","}\r","test \"Todo peso es impar\"{  \r","arenaAGranel.peso(51)\r","camion.cargar(bumblebee)\r","camion.cargar(arenaAGranel)\r","assert.notThat(camion.todoPesoEsPar())\r","}\r","test \"Hay alguno que pesa\" {\r","arenaAGranel.peso(50) \r","camion.cargar(bumblebee)\r","camion.cargar(arenaAGranel)\r","assert.that(camion.tieneCosaConPeso(50))\r","assert.that(camion.tieneCosaConPeso(800))\r","assert.notThat(camion.tieneCosaConPeso(500))\r","}\r","test \"Peso no excedido\" {\r","paqueteDeLadrillos.cantidadDeLadrillos(300)\r","camion.cargar(bumblebee)\r","camion.cargar(paqueteDeLadrillos)\r","assert.notThat(camion.pesoExcedido())\r","}\r","test \"Peso excedido\" {\r","paqueteDeLadrillos.cantidadDeLadrillos(400)\r","camion.cargar(bumblebee)\r","camion.cargar(paqueteDeLadrillos)\r","assert.that(camion.pesoExcedido())\r","}\r","}   \r","describe \"Peligrosidad de los objetos \"{\r","test \"Nivel de peligrosidad\" {\r","bumblebee.tranformarEn(auto)\r","bateriaAntiaerea.misiles(descargado)\r","camion.cargar(bateriaAntiaerea)\r","camion.cargar(bumblebee)\r","camion.cargar(residuosRadiactivos)\r","assert.equals(bateriaAntiaerea, camion.cantidadDePeligrosidadDe(0))\r","assert.equals(bumblebee, camion.cantidadDePeligrosidadDe(15))\r","assert.equals(residuosRadiactivos, camion.cantidadDePeligrosidadDe(200))\r","assert.throwsException({ => camion.cantidadDePeligrosidadDe(30) })\r","bumblebee.tranformarEn(robot)\r","assert.equals(bumblebee, camion.cantidadDePeligrosidadDe(30))\r","bateriaAntiaerea.misiles(cargado)\r","assert.equals(bateriaAntiaerea, camion.cantidadDePeligrosidadDe(100))\r","}\r","test \"Cosas peligrosas\" {\r","bateriaAntiaerea.misiles(cargado)\r","camion.cargar(knightRider)\r","camion.cargar(bateriaAntiaerea)\r","assert.equals(#{bateriaAntiaerea}, camion.cosasMasPeligrosasQueNivel(15))\r","assert.equals(#{bateriaAntiaerea}, camion.cosasMasPeligrosasQue(bumblebee))\r","assert.equals(#{knightRider, bateriaAntiaerea}, camion.cosasMasPeligrosasQueNivel(2))\r","assert.equals(#{bateriaAntiaerea, knightRider}, camion.cosasMasPeligrosasQue(paqueteDeLadrillos))\r","assert.equals(#{}, camion.cosasMasPeligrosasQueNivel(300))\r","assert.equals(#{},camion.cosasMasPeligrosasQue(residuosRadiactivos))\r","} \r","}\r","describe \"Circular en la ruta\" {\r","test \"Puede circular con bumblebee en auto y 300 ladrillos en ruta nivel 20\" {\r","bumblebee.tranformarEn(auto) \r","paqueteDeLadrillos.cantidadDeLadrillos(300) \r","camion.cargar(bumblebee)\r","camion.cargar(paqueteDeLadrillos)\r","assert.that(camion.puedeCircularRutaDeNivel(20))\r","}\r","test \"No puede circular con bumblebee en auto y 400 ladrillos en ruta nivel 20 (exceso de peso)\" {\r","bumblebee.tranformarEn(auto) \r","paqueteDeLadrillos.cantidadDeLadrillos(400) \r","camion.cargar(bumblebee)\r","camion.cargar(paqueteDeLadrillos)\r","assert.notThat(camion.puedeCircularRutaDeNivel(20))\r","}\r","test \"No puede circular con bumblebee en modo robot y 300 ladrillos en ruta nivel 20 (exceso de peligrosidad)\" {\r","bumblebee.tranformarEn(robot) \r","paqueteDeLadrillos.cantidadDeLadrillos(300)\r","camion.cargar(bumblebee)\r","camion.cargar(paqueteDeLadrillos)\r","assert.notThat(camion.puedeCircularRutaDeNivel(20))\r","}\r","}\r","describe \"mas Cosas\"{\r","test \"contenedor Portuario vacio\" {\r","assert.equals(100, contenedorPortuario.peso())\r","assert.equals(0, contenedorPortuario.nivelPeligrosidad())\r","}\r","test \"Contenedor cargado con Knight Rider y 50 kg de arena a granel\" {\r","contenedorPortuario.cargarCosaAContenedor(knightRider)\r","arenaAGranel.peso(50)\r","contenedorPortuario.cargarCosaAContenedor(arenaAGranel)\r","assert.equals(650, contenedorPortuario.peso())\r","assert.equals(10, contenedorPortuario.nivelPeligrosidad())\r","}\r","test \"Embalaje de seguridad para Knight Rider\" {\r","embalajeDeSeguridad.embalar(knightRider)\r","assert.equals(500, embalajeDeSeguridad.peso())\r","assert.equals(5, embalajeDeSeguridad.nivelPeligrosidad())\r","}\r","test \"Embalaje de seguridad para Bumbleblee en modo auto\" {\r","bumblebee.tranformarEn(auto)\r","embalajeDeSeguridad.embalar(bumblebee)\r","assert.equals(800, embalajeDeSeguridad.peso())\r","assert.equals(7.5, embalajeDeSeguridad.nivelPeligrosidad())\r","}\r","}\r","describe \"Cosa con con peso entre un valor maximo y minimo\" {\r","method initialize(){\r","paqueteDeLadrillos.cantidadDeLadrillos(300)\r","camion.cargar(bumblebee) //800\r","camion.cargar(paqueteDeLadrillos) //600\r","}\r","test \"No tiene algo que pesa entre 5 y 100\" {\r","assert.throwsException({ camion.cosaQuePesaEntreLosValores(5, 100) })\r","}\r","test \"Tiene algo que pesa entre 5 y 1000\" {\r","assert.equals(true, camion.cosaQuePesaEntreLosValores(5, 1000) != null)\r","}\r","test \"No tiene algo que pese entre 900 y 1000\" { \r","assert.throwsException({ camion.cosaQuePesaEntreLosValores(900, 1000) })\r","}\r","}\r","describe \"Todos los pesos de las cosas que tiene cargado el camion\" {\r","test \"Peso de Bumblebee y Paquete de ladrillos\" {\r","paqueteDeLadrillos.cantidadDeLadrillos(300)\r","camion.cargar(bumblebee)\r","camion.cargar(paqueteDeLadrillos)\r","assert.equals([800,600], camion.pesoDeLasCosasCargadas())\r","}\r","}\r","describe \"Bultos que carga el camion\" {\r","test \"Primer caso\" {\r","contenedorPortuario.cargarCosaAContenedor(knightRider)\r","contenedorPortuario.cargarCosaAContenedor(bumblebee)\r","camion.cargar(contenedorPortuario)  \r","embalajeDeSeguridad.embalar(residuosRadiactivos)\r","camion.cargar(embalajeDeSeguridad)\r","camion.cargar(arenaAGranel)\r","paqueteDeLadrillos.cantidadDeLadrillos(50)\r","camion.cargar(paqueteDeLadrillos)\r","bateriaAntiaerea.misiles(descargado)\r","camion.cargar(bateriaAntiaerea)\r","assert.equals(9, camion.cantidadDeBultosQueLleva()) \r","}\r","test \"Segundo caso\" {\r","paqueteDeLadrillos.cantidadDeLadrillos(150)\r","camion.cargar(paqueteDeLadrillos)\r","bateriaAntiaerea.misiles(cargado)\r","camion.cargar(bateriaAntiaerea)   \r","camion.cargar(contenedorPortuario)  \r","assert.equals(5, camion.cantidadDeBultosQueLleva()) \r","}\r","test \"Tercer caso\" {\r","paqueteDeLadrillos.cantidadDeLadrillos(350)\r","camion.cargar(paqueteDeLadrillos)\r","camion.cargar(arenaAGranel)   \r","assert.equals(4, camion.cantidadDeBultosQueLleva()) \r","}\r"]]},"level":"error","message":"✘ Failed to get type description: Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"describe \\\"Venta mercado\\\" {\\r\",\n      \"test \\\"venta\\\" {\\r\",\n      \"personaje.position(game.at(2,2))\\r\",\n      \"personaje.sembrarMaiz()\\r\",\n      \"personaje.regar()\\r\",\n      \"personaje.cosechar()\\r\",\n      \"var nuevoMercado = new Mercado(position = game.at(1,1), monedas = 1000)\\r\",\n      \"game.addVisual(nuevoMercado)\\r\",\n      \"personaje.position(game.at(1,1))\\r\",\n      \"personaje.vender()\\r\",\n      \"assert.that(personaje.cantidadDeMonedas() == 150)\\r\",\n      \"assert.that(personaje.listaDeVenta().isEmpty())\\r\",\n      \"assert.that(nuevoMercado.monedas() == 850)\\r\",\n      \"}\\r\",\n      \"//////////////////////////////////////////////////////////////////////\\r\",\n      \"/////////////////////////////////////////////////////////////////////\\r\",\n      \"describe \\\"Camión cargando y descargando vehículos\\\" {\\r\",\n      \"test \\\"Carga y descarga del camion\\\" {\\r\",\n      \"// Carga inicial de bumblebee\\r\",\n      \"camion.cargar(bumblebee) \\r\",\n      \"assert.equals(#{bumblebee}, camion.cosas())\\r\",\n      \"// Carga adicional de Knight Rider\\r\",\n      \"camion.cargar(knightRider)\\r\",\n      \"assert.equals(#{bumblebee, knightRider}, camion.cosas())\\r\",\n      \"// Descarga de bumblebee\\r\",\n      \"camion.descargar(bumblebee)\\r\",\n      \"assert.equals(#{knightRider}, camion.cosas())\\r\",\n      \"// Intento de carga duplicada de Knight Rider\\r\",\n      \"assert.throwsException({camion.cargar(knightRider)})\\r\",\n      \"// Intento de descarga de bumblebee cuando no está\\r\",\n      \"assert.throwsException({camion.descargar(bumblebee)})\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"describe \\\"Validación de pesos en el camión\\\"{\\r\",\n      \"test \\\"Todo peso par\\\" {\\r\",\n      \"arenaAGranel.peso(50)\\r\",\n      \"camion.cargar(bumblebee)\\r\",\n      \"camion.cargar(arenaAGranel)\\r\",\n      \"assert.that(camion.todoPesoEsPar())\\r\",\n      \"}\\r\",\n      \"test \\\"Todo peso es impar\\\"{  \\r\",\n      \"arenaAGranel.peso(51)\\r\",\n      \"camion.cargar(bumblebee)\\r\",\n      \"camion.cargar(arenaAGranel)\\r\",\n      \"assert.notThat(camion.todoPesoEsPar())\\r\",\n      \"}\\r\",\n      \"test \\\"Hay alguno que pesa\\\" {\\r\",\n      \"arenaAGranel.peso(50) \\r\",\n      \"camion.cargar(bumblebee)\\r\",\n      \"camion.cargar(arenaAGranel)\\r\",\n      \"assert.that(camion.tieneCosaConPeso(50))\\r\",\n      \"assert.that(camion.tieneCosaConPeso(800))\\r\",\n      \"assert.notThat(camion.tieneCosaConPeso(500))\\r\",\n      \"}\\r\",\n      \"test \\\"Peso no excedido\\\" {\\r\",\n      \"paqueteDeLadrillos.cantidadDeLadrillos(300)\\r\",\n      \"camion.cargar(bumblebee)\\r\",\n      \"camion.cargar(paqueteDeLadrillos)\\r\",\n      \"assert.notThat(camion.pesoExcedido())\\r\",\n      \"}\\r\",\n      \"test \\\"Peso excedido\\\" {\\r\",\n      \"paqueteDeLadrillos.cantidadDeLadrillos(400)\\r\",\n      \"camion.cargar(bumblebee)\\r\",\n      \"camion.cargar(paqueteDeLadrillos)\\r\",\n      \"assert.that(camion.pesoExcedido())\\r\",\n      \"}\\r\",\n      \"}   \\r\",\n      \"describe \\\"Peligrosidad de los objetos \\\"{\\r\",\n      \"test \\\"Nivel de peligrosidad\\\" {\\r\",\n      \"bumblebee.tranformarEn(auto)\\r\",\n      \"bateriaAntiaerea.misiles(descargado)\\r\",\n      \"camion.cargar(bateriaAntiaerea)\\r\",\n      \"camion.cargar(bumblebee)\\r\",\n      \"camion.cargar(residuosRadiactivos)\\r\",\n      \"assert.equals(bateriaAntiaerea, camion.cantidadDePeligrosidadDe(0))\\r\",\n      \"assert.equals(bumblebee, camion.cantidadDePeligrosidadDe(15))\\r\",\n      \"assert.equals(residuosRadiactivos, camion.cantidadDePeligrosidadDe(200))\\r\",\n      \"assert.throwsException({ => camion.cantidadDePeligrosidadDe(30) })\\r\",\n      \"bumblebee.tranformarEn(robot)\\r\",\n      \"assert.equals(bumblebee, camion.cantidadDePeligrosidadDe(30))\\r\",\n      \"bateriaAntiaerea.misiles(cargado)\\r\",\n      \"assert.equals(bateriaAntiaerea, camion.cantidadDePeligrosidadDe(100))\\r\",\n      \"}\\r\",\n      \"test \\\"Cosas peligrosas\\\" {\\r\",\n      \"bateriaAntiaerea.misiles(cargado)\\r\",\n      \"camion.cargar(knightRider)\\r\",\n      \"camion.cargar(bateriaAntiaerea)\\r\",\n      \"assert.equals(#{bateriaAntiaerea}, camion.cosasMasPeligrosasQueNivel(15))\\r\",\n      \"assert.equals(#{bateriaAntiaerea}, camion.cosasMasPeligrosasQue(bumblebee))\\r\",\n      \"assert.equals(#{knightRider, bateriaAntiaerea}, camion.cosasMasPeligrosasQueNivel(2))\\r\",\n      \"assert.equals(#{bateriaAntiaerea, knightRider}, camion.cosasMasPeligrosasQue(paqueteDeLadrillos))\\r\",\n      \"assert.equals(#{}, camion.cosasMasPeligrosasQueNivel(300))\\r\",\n      \"assert.equals(#{},camion.cosasMasPeligrosasQue(residuosRadiactivos))\\r\",\n      \"} \\r\",\n      \"}\\r\",\n      \"describe \\\"Circular en la ruta\\\" {\\r\",\n      \"test \\\"Puede circular con bumblebee en auto y 300 ladrillos en ruta nivel 20\\\" {\\r\",\n      \"bumblebee.tranformarEn(auto) \\r\",\n      \"paqueteDeLadrillos.cantidadDeLadrillos(300) \\r\",\n      \"camion.cargar(bumblebee)\\r\",\n      \"camion.cargar(paqueteDeLadrillos)\\r\",\n      \"assert.that(camion.puedeCircularRutaDeNivel(20))\\r\",\n      \"}\\r\",\n      \"test \\\"No puede circular con bumblebee en auto y 400 ladrillos en ruta nivel 20 (exceso de peso)\\\" {\\r\",\n      \"bumblebee.tranformarEn(auto) \\r\",\n      \"paqueteDeLadrillos.cantidadDeLadrillos(400) \\r\",\n      \"camion.cargar(bumblebee)\\r\",\n      \"camion.cargar(paqueteDeLadrillos)\\r\",\n      \"assert.notThat(camion.puedeCircularRutaDeNivel(20))\\r\",\n      \"}\\r\",\n      \"test \\\"No puede circular con bumblebee en modo robot y 300 ladrillos en ruta nivel 20 (exceso de peligrosidad)\\\" {\\r\",\n      \"bumblebee.tranformarEn(robot) \\r\",\n      \"paqueteDeLadrillos.cantidadDeLadrillos(300)\\r\",\n      \"camion.cargar(bumblebee)\\r\",\n      \"camion.cargar(paqueteDeLadrillos)\\r\",\n      \"assert.notThat(camion.puedeCircularRutaDeNivel(20))\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"describe \\\"mas Cosas\\\"{\\r\",\n      \"test \\\"contenedor Portuario vacio\\\" {\\r\",\n      \"assert.equals(100, contenedorPortuario.peso())\\r\",\n      \"assert.equals(0, contenedorPortuario.nivelPeligrosidad())\\r\",\n      \"}\\r\",\n      \"test \\\"Contenedor cargado con Knight Rider y 50 kg de arena a granel\\\" {\\r\",\n      \"contenedorPortuario.cargarCosaAContenedor(knightRider)\\r\",\n      \"arenaAGranel.peso(50)\\r\",\n      \"contenedorPortuario.cargarCosaAContenedor(arenaAGranel)\\r\",\n      \"assert.equals(650, contenedorPortuario.peso())\\r\",\n      \"assert.equals(10, contenedorPortuario.nivelPeligrosidad())\\r\",\n      \"}\\r\",\n      \"test \\\"Embalaje de seguridad para Knight Rider\\\" {\\r\",\n      \"embalajeDeSeguridad.embalar(knightRider)\\r\",\n      \"assert.equals(500, embalajeDeSeguridad.peso())\\r\",\n      \"assert.equals(5, embalajeDeSeguridad.nivelPeligrosidad())\\r\",\n      \"}\\r\",\n      \"test \\\"Embalaje de seguridad para Bumbleblee en modo auto\\\" {\\r\",\n      \"bumblebee.tranformarEn(auto)\\r\",\n      \"embalajeDeSeguridad.embalar(bumblebee)\\r\",\n      \"assert.equals(800, embalajeDeSeguridad.peso())\\r\",\n      \"assert.equals(7.5, embalajeDeSeguridad.nivelPeligrosidad())\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"describe \\\"Cosa con con peso entre un valor maximo y minimo\\\" {\\r\",\n      \"method initialize(){\\r\",\n      \"paqueteDeLadrillos.cantidadDeLadrillos(300)\\r\",\n      \"camion.cargar(bumblebee) //800\\r\",\n      \"camion.cargar(paqueteDeLadrillos) //600\\r\",\n      \"}\\r\",\n      \"test \\\"No tiene algo que pesa entre 5 y 100\\\" {\\r\",\n      \"assert.throwsException({ camion.cosaQuePesaEntreLosValores(5, 100) })\\r\",\n      \"}\\r\",\n      \"test \\\"Tiene algo que pesa entre 5 y 1000\\\" {\\r\",\n      \"assert.equals(true, camion.cosaQuePesaEntreLosValores(5, 1000) != null)\\r\",\n      \"}\\r\",\n      \"test \\\"No tiene algo que pese entre 900 y 1000\\\" { \\r\",\n      \"assert.throwsException({ camion.cosaQuePesaEntreLosValores(900, 1000) })\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"describe \\\"Todos los pesos de las cosas que tiene cargado el camion\\\" {\\r\",\n      \"test \\\"Peso de Bumblebee y Paquete de ladrillos\\\" {\\r\",\n      \"paqueteDeLadrillos.cantidadDeLadrillos(300)\\r\",\n      \"camion.cargar(bumblebee)\\r\",\n      \"camion.cargar(paqueteDeLadrillos)\\r\",\n      \"assert.equals([800,600], camion.pesoDeLasCosasCargadas())\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"describe \\\"Bultos que carga el camion\\\" {\\r\",\n      \"test \\\"Primer caso\\\" {\\r\",\n      \"contenedorPortuario.cargarCosaAContenedor(knightRider)\\r\",\n      \"contenedorPortuario.cargarCosaAContenedor(bumblebee)\\r\",\n      \"camion.cargar(contenedorPortuario)  \\r\",\n      \"embalajeDeSeguridad.embalar(residuosRadiactivos)\\r\",\n      \"camion.cargar(embalajeDeSeguridad)\\r\",\n      \"camion.cargar(arenaAGranel)\\r\",\n      \"paqueteDeLadrillos.cantidadDeLadrillos(50)\\r\",\n      \"camion.cargar(paqueteDeLadrillos)\\r\",\n      \"bateriaAntiaerea.misiles(descargado)\\r\",\n      \"camion.cargar(bateriaAntiaerea)\\r\",\n      \"assert.equals(9, camion.cantidadDeBultosQueLleva()) \\r\",\n      \"}\\r\",\n      \"test \\\"Segundo caso\\\" {\\r\",\n      \"paqueteDeLadrillos.cantidadDeLadrillos(150)\\r\",\n      \"camion.cargar(paqueteDeLadrillos)\\r\",\n      \"bateriaAntiaerea.misiles(cargado)\\r\",\n      \"camion.cargar(bateriaAntiaerea)   \\r\",\n      \"camion.cargar(contenedorPortuario)  \\r\",\n      \"assert.equals(5, camion.cantidadDeBultosQueLleva()) \\r\",\n      \"}\\r\",\n      \"test \\\"Tercer caso\\\" {\\r\",\n      \"paqueteDeLadrillos.cantidadDeLadrillos(350)\\r\",\n      \"camion.cargar(paqueteDeLadrillos)\\r\",\n      \"camion.cargar(arenaAGranel)   \\r\",\n      \"assert.equals(4, camion.cantidadDeBultosQueLleva()) \\r\",\n      \"}\\r\"\n    ]\n  ]\n} {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"describe \\\"Venta mercado\\\" {\\r\",\n      \"test \\\"venta\\\" {\\r\",\n      \"personaje.position(game.at(2,2))\\r\",\n      \"personaje.sembrarMaiz()\\r\",\n      \"personaje.regar()\\r\",\n      \"personaje.cosechar()\\r\",\n      \"var nuevoMercado = new Mercado(position = game.at(1,1), monedas = 1000)\\r\",\n      \"game.addVisual(nuevoMercado)\\r\",\n      \"personaje.position(game.at(1,1))\\r\",\n      \"personaje.vender()\\r\",\n      \"assert.that(personaje.cantidadDeMonedas() == 150)\\r\",\n      \"assert.that(personaje.listaDeVenta().isEmpty())\\r\",\n      \"assert.that(nuevoMercado.monedas() == 850)\\r\",\n      \"}\\r\",\n      \"//////////////////////////////////////////////////////////////////////\\r\",\n      \"/////////////////////////////////////////////////////////////////////\\r\",\n      \"describe \\\"Camión cargando y descargando vehículos\\\" {\\r\",\n      \"test \\\"Carga y descarga del camion\\\" {\\r\",\n      \"// Carga inicial de bumblebee\\r\",\n      \"camion.cargar(bumblebee) \\r\",\n      \"assert.equals(#{bumblebee}, camion.cosas())\\r\",\n      \"// Carga adicional de Knight Rider\\r\",\n      \"camion.cargar(knightRider)\\r\",\n      \"assert.equals(#{bumblebee, knightRider}, camion.cosas())\\r\",\n      \"// Descarga de bumblebee\\r\",\n      \"camion.descargar(bumblebee)\\r\",\n      \"assert.equals(#{knightRider}, camion.cosas())\\r\",\n      \"// Intento de carga duplicada de Knight Rider\\r\",\n      \"assert.throwsException({camion.cargar(knightRider)})\\r\",\n      \"// Intento de descarga de bumblebee cuando no está\\r\",\n      \"assert.throwsException({camion.descargar(bumblebee)})\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"describe \\\"Validación de pesos en el camión\\\"{\\r\",\n      \"test \\\"Todo peso par\\\" {\\r\",\n      \"arenaAGranel.peso(50)\\r\",\n      \"camion.cargar(bumblebee)\\r\",\n      \"camion.cargar(arenaAGranel)\\r\",\n      \"assert.that(camion.todoPesoEsPar())\\r\",\n      \"}\\r\",\n      \"test \\\"Todo peso es impar\\\"{  \\r\",\n      \"arenaAGranel.peso(51)\\r\",\n      \"camion.cargar(bumblebee)\\r\",\n      \"camion.cargar(arenaAGranel)\\r\",\n      \"assert.notThat(camion.todoPesoEsPar())\\r\",\n      \"}\\r\",\n      \"test \\\"Hay alguno que pesa\\\" {\\r\",\n      \"arenaAGranel.peso(50) \\r\",\n      \"camion.cargar(bumblebee)\\r\",\n      \"camion.cargar(arenaAGranel)\\r\",\n      \"assert.that(camion.tieneCosaConPeso(50))\\r\",\n      \"assert.that(camion.tieneCosaConPeso(800))\\r\",\n      \"assert.notThat(camion.tieneCosaConPeso(500))\\r\",\n      \"}\\r\",\n      \"test \\\"Peso no excedido\\\" {\\r\",\n      \"paqueteDeLadrillos.cantidadDeLadrillos(300)\\r\",\n      \"camion.cargar(bumblebee)\\r\",\n      \"camion.cargar(paqueteDeLadrillos)\\r\",\n      \"assert.notThat(camion.pesoExcedido())\\r\",\n      \"}\\r\",\n      \"test \\\"Peso excedido\\\" {\\r\",\n      \"paqueteDeLadrillos.cantidadDeLadrillos(400)\\r\",\n      \"camion.cargar(bumblebee)\\r\",\n      \"camion.cargar(paqueteDeLadrillos)\\r\",\n      \"assert.that(camion.pesoExcedido())\\r\",\n      \"}\\r\",\n      \"}   \\r\",\n      \"describe \\\"Peligrosidad de los objetos \\\"{\\r\",\n      \"test \\\"Nivel de peligrosidad\\\" {\\r\",\n      \"bumblebee.tranformarEn(auto)\\r\",\n      \"bateriaAntiaerea.misiles(descargado)\\r\",\n      \"camion.cargar(bateriaAntiaerea)\\r\",\n      \"camion.cargar(bumblebee)\\r\",\n      \"camion.cargar(residuosRadiactivos)\\r\",\n      \"assert.equals(bateriaAntiaerea, camion.cantidadDePeligrosidadDe(0))\\r\",\n      \"assert.equals(bumblebee, camion.cantidadDePeligrosidadDe(15))\\r\",\n      \"assert.equals(residuosRadiactivos, camion.cantidadDePeligrosidadDe(200))\\r\",\n      \"assert.throwsException({ => camion.cantidadDePeligrosidadDe(30) })\\r\",\n      \"bumblebee.tranformarEn(robot)\\r\",\n      \"assert.equals(bumblebee, camion.cantidadDePeligrosidadDe(30))\\r\",\n      \"bateriaAntiaerea.misiles(cargado)\\r\",\n      \"assert.equals(bateriaAntiaerea, camion.cantidadDePeligrosidadDe(100))\\r\",\n      \"}\\r\",\n      \"test \\\"Cosas peligrosas\\\" {\\r\",\n      \"bateriaAntiaerea.misiles(cargado)\\r\",\n      \"camion.cargar(knightRider)\\r\",\n      \"camion.cargar(bateriaAntiaerea)\\r\",\n      \"assert.equals(#{bateriaAntiaerea}, camion.cosasMasPeligrosasQueNivel(15))\\r\",\n      \"assert.equals(#{bateriaAntiaerea}, camion.cosasMasPeligrosasQue(bumblebee))\\r\",\n      \"assert.equals(#{knightRider, bateriaAntiaerea}, camion.cosasMasPeligrosasQueNivel(2))\\r\",\n      \"assert.equals(#{bateriaAntiaerea, knightRider}, camion.cosasMasPeligrosasQue(paqueteDeLadrillos))\\r\",\n      \"assert.equals(#{}, camion.cosasMasPeligrosasQueNivel(300))\\r\",\n      \"assert.equals(#{},camion.cosasMasPeligrosasQue(residuosRadiactivos))\\r\",\n      \"} \\r\",\n      \"}\\r\",\n      \"describe \\\"Circular en la ruta\\\" {\\r\",\n      \"test \\\"Puede circular con bumblebee en auto y 300 ladrillos en ruta nivel 20\\\" {\\r\",\n      \"bumblebee.tranformarEn(auto) \\r\",\n      \"paqueteDeLadrillos.cantidadDeLadrillos(300) \\r\",\n      \"camion.cargar(bumblebee)\\r\",\n      \"camion.cargar(paqueteDeLadrillos)\\r\",\n      \"assert.that(camion.puedeCircularRutaDeNivel(20))\\r\",\n      \"}\\r\",\n      \"test \\\"No puede circular con bumblebee en auto y 400 ladrillos en ruta nivel 20 (exceso de peso)\\\" {\\r\",\n      \"bumblebee.tranformarEn(auto) \\r\",\n      \"paqueteDeLadrillos.cantidadDeLadrillos(400) \\r\",\n      \"camion.cargar(bumblebee)\\r\",\n      \"camion.cargar(paqueteDeLadrillos)\\r\",\n      \"assert.notThat(camion.puedeCircularRutaDeNivel(20))\\r\",\n      \"}\\r\",\n      \"test \\\"No puede circular con bumblebee en modo robot y 300 ladrillos en ruta nivel 20 (exceso de peligrosidad)\\\" {\\r\",\n      \"bumblebee.tranformarEn(robot) \\r\",\n      \"paqueteDeLadrillos.cantidadDeLadrillos(300)\\r\",\n      \"camion.cargar(bumblebee)\\r\",\n      \"camion.cargar(paqueteDeLadrillos)\\r\",\n      \"assert.notThat(camion.puedeCircularRutaDeNivel(20))\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"describe \\\"mas Cosas\\\"{\\r\",\n      \"test \\\"contenedor Portuario vacio\\\" {\\r\",\n      \"assert.equals(100, contenedorPortuario.peso())\\r\",\n      \"assert.equals(0, contenedorPortuario.nivelPeligrosidad())\\r\",\n      \"}\\r\",\n      \"test \\\"Contenedor cargado con Knight Rider y 50 kg de arena a granel\\\" {\\r\",\n      \"contenedorPortuario.cargarCosaAContenedor(knightRider)\\r\",\n      \"arenaAGranel.peso(50)\\r\",\n      \"contenedorPortuario.cargarCosaAContenedor(arenaAGranel)\\r\",\n      \"assert.equals(650, contenedorPortuario.peso())\\r\",\n      \"assert.equals(10, contenedorPortuario.nivelPeligrosidad())\\r\",\n      \"}\\r\",\n      \"test \\\"Embalaje de seguridad para Knight Rider\\\" {\\r\",\n      \"embalajeDeSeguridad.embalar(knightRider)\\r\",\n      \"assert.equals(500, embalajeDeSeguridad.peso())\\r\",\n      \"assert.equals(5, embalajeDeSeguridad.nivelPeligrosidad())\\r\",\n      \"}\\r\",\n      \"test \\\"Embalaje de seguridad para Bumbleblee en modo auto\\\" {\\r\",\n      \"bumblebee.tranformarEn(auto)\\r\",\n      \"embalajeDeSeguridad.embalar(bumblebee)\\r\",\n      \"assert.equals(800, embalajeDeSeguridad.peso())\\r\",\n      \"assert.equals(7.5, embalajeDeSeguridad.nivelPeligrosidad())\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"describe \\\"Cosa con con peso entre un valor maximo y minimo\\\" {\\r\",\n      \"method initialize(){\\r\",\n      \"paqueteDeLadrillos.cantidadDeLadrillos(300)\\r\",\n      \"camion.cargar(bumblebee) //800\\r\",\n      \"camion.cargar(paqueteDeLadrillos) //600\\r\",\n      \"}\\r\",\n      \"test \\\"No tiene algo que pesa entre 5 y 100\\\" {\\r\",\n      \"assert.throwsException({ camion.cosaQuePesaEntreLosValores(5, 100) })\\r\",\n      \"}\\r\",\n      \"test \\\"Tiene algo que pesa entre 5 y 1000\\\" {\\r\",\n      \"assert.equals(true, camion.cosaQuePesaEntreLosValores(5, 1000) != null)\\r\",\n      \"}\\r\",\n      \"test \\\"No tiene algo que pese entre 900 y 1000\\\" { \\r\",\n      \"assert.throwsException({ camion.cosaQuePesaEntreLosValores(900, 1000) })\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"describe \\\"Todos los pesos de las cosas que tiene cargado el camion\\\" {\\r\",\n      \"test \\\"Peso de Bumblebee y Paquete de ladrillos\\\" {\\r\",\n      \"paqueteDeLadrillos.cantidadDeLadrillos(300)\\r\",\n      \"camion.cargar(bumblebee)\\r\",\n      \"camion.cargar(paqueteDeLadrillos)\\r\",\n      \"assert.equals([800,600], camion.pesoDeLasCosasCargadas())\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"describe \\\"Bultos que carga el camion\\\" {\\r\",\n      \"test \\\"Primer caso\\\" {\\r\",\n      \"contenedorPortuario.cargarCosaAContenedor(knightRider)\\r\",\n      \"contenedorPortuario.cargarCosaAContenedor(bumblebee)\\r\",\n      \"camion.cargar(contenedorPortuario)  \\r\",\n      \"embalajeDeSeguridad.embalar(residuosRadiactivos)\\r\",\n      \"camion.cargar(embalajeDeSeguridad)\\r\",\n      \"camion.cargar(arenaAGranel)\\r\",\n      \"paqueteDeLadrillos.cantidadDeLadrillos(50)\\r\",\n      \"camion.cargar(paqueteDeLadrillos)\\r\",\n      \"bateriaAntiaerea.misiles(descargado)\\r\",\n      \"camion.cargar(bateriaAntiaerea)\\r\",\n      \"assert.equals(9, camion.cantidadDeBultosQueLleva()) \\r\",\n      \"}\\r\",\n      \"test \\\"Segundo caso\\\" {\\r\",\n      \"paqueteDeLadrillos.cantidadDeLadrillos(150)\\r\",\n      \"camion.cargar(paqueteDeLadrillos)\\r\",\n      \"bateriaAntiaerea.misiles(cargado)\\r\",\n      \"camion.cargar(bateriaAntiaerea)   \\r\",\n      \"camion.cargar(contenedorPortuario)  \\r\",\n      \"assert.equals(5, camion.cantidadDeBultosQueLleva()) \\r\",\n      \"}\\r\",\n      \"test \\\"Tercer caso\\\" {\\r\",\n      \"paqueteDeLadrillos.cantidadDeLadrillos(350)\\r\",\n      \"camion.cargar(paqueteDeLadrillos)\\r\",\n      \"camion.cargar(arenaAGranel)   \\r\",\n      \"assert.equals(4, camion.cantidadDeBultosQueLleva()) \\r\",\n      \"}\\r\"\n    ]\n  ]\n}","stack":"Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"describe \\\"Venta mercado\\\" {\\r\",\n      \"test \\\"venta\\\" {\\r\",\n      \"personaje.position(game.at(2,2))\\r\",\n      \"personaje.sembrarMaiz()\\r\",\n      \"personaje.regar()\\r\",\n      \"personaje.cosechar()\\r\",\n      \"var nuevoMercado = new Mercado(position = game.at(1,1), monedas = 1000)\\r\",\n      \"game.addVisual(nuevoMercado)\\r\",\n      \"personaje.position(game.at(1,1))\\r\",\n      \"personaje.vender()\\r\",\n      \"assert.that(personaje.cantidadDeMonedas() == 150)\\r\",\n      \"assert.that(personaje.listaDeVenta().isEmpty())\\r\",\n      \"assert.that(nuevoMercado.monedas() == 850)\\r\",\n      \"}\\r\",\n      \"//////////////////////////////////////////////////////////////////////\\r\",\n      \"/////////////////////////////////////////////////////////////////////\\r\",\n      \"describe \\\"Camión cargando y descargando vehículos\\\" {\\r\",\n      \"test \\\"Carga y descarga del camion\\\" {\\r\",\n      \"// Carga inicial de bumblebee\\r\",\n      \"camion.cargar(bumblebee) \\r\",\n      \"assert.equals(#{bumblebee}, camion.cosas())\\r\",\n      \"// Carga adicional de Knight Rider\\r\",\n      \"camion.cargar(knightRider)\\r\",\n      \"assert.equals(#{bumblebee, knightRider}, camion.cosas())\\r\",\n      \"// Descarga de bumblebee\\r\",\n      \"camion.descargar(bumblebee)\\r\",\n      \"assert.equals(#{knightRider}, camion.cosas())\\r\",\n      \"// Intento de carga duplicada de Knight Rider\\r\",\n      \"assert.throwsException({camion.cargar(knightRider)})\\r\",\n      \"// Intento de descarga de bumblebee cuando no está\\r\",\n      \"assert.throwsException({camion.descargar(bumblebee)})\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"describe \\\"Validación de pesos en el camión\\\"{\\r\",\n      \"test \\\"Todo peso par\\\" {\\r\",\n      \"arenaAGranel.peso(50)\\r\",\n      \"camion.cargar(bumblebee)\\r\",\n      \"camion.cargar(arenaAGranel)\\r\",\n      \"assert.that(camion.todoPesoEsPar())\\r\",\n      \"}\\r\",\n      \"test \\\"Todo peso es impar\\\"{  \\r\",\n      \"arenaAGranel.peso(51)\\r\",\n      \"camion.cargar(bumblebee)\\r\",\n      \"camion.cargar(arenaAGranel)\\r\",\n      \"assert.notThat(camion.todoPesoEsPar())\\r\",\n      \"}\\r\",\n      \"test \\\"Hay alguno que pesa\\\" {\\r\",\n      \"arenaAGranel.peso(50) \\r\",\n      \"camion.cargar(bumblebee)\\r\",\n      \"camion.cargar(arenaAGranel)\\r\",\n      \"assert.that(camion.tieneCosaConPeso(50))\\r\",\n      \"assert.that(camion.tieneCosaConPeso(800))\\r\",\n      \"assert.notThat(camion.tieneCosaConPeso(500))\\r\",\n      \"}\\r\",\n      \"test \\\"Peso no excedido\\\" {\\r\",\n      \"paqueteDeLadrillos.cantidadDeLadrillos(300)\\r\",\n      \"camion.cargar(bumblebee)\\r\",\n      \"camion.cargar(paqueteDeLadrillos)\\r\",\n      \"assert.notThat(camion.pesoExcedido())\\r\",\n      \"}\\r\",\n      \"test \\\"Peso excedido\\\" {\\r\",\n      \"paqueteDeLadrillos.cantidadDeLadrillos(400)\\r\",\n      \"camion.cargar(bumblebee)\\r\",\n      \"camion.cargar(paqueteDeLadrillos)\\r\",\n      \"assert.that(camion.pesoExcedido())\\r\",\n      \"}\\r\",\n      \"}   \\r\",\n      \"describe \\\"Peligrosidad de los objetos \\\"{\\r\",\n      \"test \\\"Nivel de peligrosidad\\\" {\\r\",\n      \"bumblebee.tranformarEn(auto)\\r\",\n      \"bateriaAntiaerea.misiles(descargado)\\r\",\n      \"camion.cargar(bateriaAntiaerea)\\r\",\n      \"camion.cargar(bumblebee)\\r\",\n      \"camion.cargar(residuosRadiactivos)\\r\",\n      \"assert.equals(bateriaAntiaerea, camion.cantidadDePeligrosidadDe(0))\\r\",\n      \"assert.equals(bumblebee, camion.cantidadDePeligrosidadDe(15))\\r\",\n      \"assert.equals(residuosRadiactivos, camion.cantidadDePeligrosidadDe(200))\\r\",\n      \"assert.throwsException({ => camion.cantidadDePeligrosidadDe(30) })\\r\",\n      \"bumblebee.tranformarEn(robot)\\r\",\n      \"assert.equals(bumblebee, camion.cantidadDePeligrosidadDe(30))\\r\",\n      \"bateriaAntiaerea.misiles(cargado)\\r\",\n      \"assert.equals(bateriaAntiaerea, camion.cantidadDePeligrosidadDe(100))\\r\",\n      \"}\\r\",\n      \"test \\\"Cosas peligrosas\\\" {\\r\",\n      \"bateriaAntiaerea.misiles(cargado)\\r\",\n      \"camion.cargar(knightRider)\\r\",\n      \"camion.cargar(bateriaAntiaerea)\\r\",\n      \"assert.equals(#{bateriaAntiaerea}, camion.cosasMasPeligrosasQueNivel(15))\\r\",\n      \"assert.equals(#{bateriaAntiaerea}, camion.cosasMasPeligrosasQue(bumblebee))\\r\",\n      \"assert.equals(#{knightRider, bateriaAntiaerea}, camion.cosasMasPeligrosasQueNivel(2))\\r\",\n      \"assert.equals(#{bateriaAntiaerea, knightRider}, camion.cosasMasPeligrosasQue(paqueteDeLadrillos))\\r\",\n      \"assert.equals(#{}, camion.cosasMasPeligrosasQueNivel(300))\\r\",\n      \"assert.equals(#{},camion.cosasMasPeligrosasQue(residuosRadiactivos))\\r\",\n      \"} \\r\",\n      \"}\\r\",\n      \"describe \\\"Circular en la ruta\\\" {\\r\",\n      \"test \\\"Puede circular con bumblebee en auto y 300 ladrillos en ruta nivel 20\\\" {\\r\",\n      \"bumblebee.tranformarEn(auto) \\r\",\n      \"paqueteDeLadrillos.cantidadDeLadrillos(300) \\r\",\n      \"camion.cargar(bumblebee)\\r\",\n      \"camion.cargar(paqueteDeLadrillos)\\r\",\n      \"assert.that(camion.puedeCircularRutaDeNivel(20))\\r\",\n      \"}\\r\",\n      \"test \\\"No puede circular con bumblebee en auto y 400 ladrillos en ruta nivel 20 (exceso de peso)\\\" {\\r\",\n      \"bumblebee.tranformarEn(auto) \\r\",\n      \"paqueteDeLadrillos.cantidadDeLadrillos(400) \\r\",\n      \"camion.cargar(bumblebee)\\r\",\n      \"camion.cargar(paqueteDeLadrillos)\\r\",\n      \"assert.notThat(camion.puedeCircularRutaDeNivel(20))\\r\",\n      \"}\\r\",\n      \"test \\\"No puede circular con bumblebee en modo robot y 300 ladrillos en ruta nivel 20 (exceso de peligrosidad)\\\" {\\r\",\n      \"bumblebee.tranformarEn(robot) \\r\",\n      \"paqueteDeLadrillos.cantidadDeLadrillos(300)\\r\",\n      \"camion.cargar(bumblebee)\\r\",\n      \"camion.cargar(paqueteDeLadrillos)\\r\",\n      \"assert.notThat(camion.puedeCircularRutaDeNivel(20))\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"describe \\\"mas Cosas\\\"{\\r\",\n      \"test \\\"contenedor Portuario vacio\\\" {\\r\",\n      \"assert.equals(100, contenedorPortuario.peso())\\r\",\n      \"assert.equals(0, contenedorPortuario.nivelPeligrosidad())\\r\",\n      \"}\\r\",\n      \"test \\\"Contenedor cargado con Knight Rider y 50 kg de arena a granel\\\" {\\r\",\n      \"contenedorPortuario.cargarCosaAContenedor(knightRider)\\r\",\n      \"arenaAGranel.peso(50)\\r\",\n      \"contenedorPortuario.cargarCosaAContenedor(arenaAGranel)\\r\",\n      \"assert.equals(650, contenedorPortuario.peso())\\r\",\n      \"assert.equals(10, contenedorPortuario.nivelPeligrosidad())\\r\",\n      \"}\\r\",\n      \"test \\\"Embalaje de seguridad para Knight Rider\\\" {\\r\",\n      \"embalajeDeSeguridad.embalar(knightRider)\\r\",\n      \"assert.equals(500, embalajeDeSeguridad.peso())\\r\",\n      \"assert.equals(5, embalajeDeSeguridad.nivelPeligrosidad())\\r\",\n      \"}\\r\",\n      \"test \\\"Embalaje de seguridad para Bumbleblee en modo auto\\\" {\\r\",\n      \"bumblebee.tranformarEn(auto)\\r\",\n      \"embalajeDeSeguridad.embalar(bumblebee)\\r\",\n      \"assert.equals(800, embalajeDeSeguridad.peso())\\r\",\n      \"assert.equals(7.5, embalajeDeSeguridad.nivelPeligrosidad())\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"describe \\\"Cosa con con peso entre un valor maximo y minimo\\\" {\\r\",\n      \"method initialize(){\\r\",\n      \"paqueteDeLadrillos.cantidadDeLadrillos(300)\\r\",\n      \"camion.cargar(bumblebee) //800\\r\",\n      \"camion.cargar(paqueteDeLadrillos) //600\\r\",\n      \"}\\r\",\n      \"test \\\"No tiene algo que pesa entre 5 y 100\\\" {\\r\",\n      \"assert.throwsException({ camion.cosaQuePesaEntreLosValores(5, 100) })\\r\",\n      \"}\\r\",\n      \"test \\\"Tiene algo que pesa entre 5 y 1000\\\" {\\r\",\n      \"assert.equals(true, camion.cosaQuePesaEntreLosValores(5, 1000) != null)\\r\",\n      \"}\\r\",\n      \"test \\\"No tiene algo que pese entre 900 y 1000\\\" { \\r\",\n      \"assert.throwsException({ camion.cosaQuePesaEntreLosValores(900, 1000) })\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"describe \\\"Todos los pesos de las cosas que tiene cargado el camion\\\" {\\r\",\n      \"test \\\"Peso de Bumblebee y Paquete de ladrillos\\\" {\\r\",\n      \"paqueteDeLadrillos.cantidadDeLadrillos(300)\\r\",\n      \"camion.cargar(bumblebee)\\r\",\n      \"camion.cargar(paqueteDeLadrillos)\\r\",\n      \"assert.equals([800,600], camion.pesoDeLasCosasCargadas())\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"describe \\\"Bultos que carga el camion\\\" {\\r\",\n      \"test \\\"Primer caso\\\" {\\r\",\n      \"contenedorPortuario.cargarCosaAContenedor(knightRider)\\r\",\n      \"contenedorPortuario.cargarCosaAContenedor(bumblebee)\\r\",\n      \"camion.cargar(contenedorPortuario)  \\r\",\n      \"embalajeDeSeguridad.embalar(residuosRadiactivos)\\r\",\n      \"camion.cargar(embalajeDeSeguridad)\\r\",\n      \"camion.cargar(arenaAGranel)\\r\",\n      \"paqueteDeLadrillos.cantidadDeLadrillos(50)\\r\",\n      \"camion.cargar(paqueteDeLadrillos)\\r\",\n      \"bateriaAntiaerea.misiles(descargado)\\r\",\n      \"camion.cargar(bateriaAntiaerea)\\r\",\n      \"assert.equals(9, camion.cantidadDeBultosQueLleva()) \\r\",\n      \"}\\r\",\n      \"test \\\"Segundo caso\\\" {\\r\",\n      \"paqueteDeLadrillos.cantidadDeLadrillos(150)\\r\",\n      \"camion.cargar(paqueteDeLadrillos)\\r\",\n      \"bateriaAntiaerea.misiles(cargado)\\r\",\n      \"camion.cargar(bateriaAntiaerea)   \\r\",\n      \"camion.cargar(contenedorPortuario)  \\r\",\n      \"assert.equals(5, camion.cantidadDeBultosQueLleva()) \\r\",\n      \"}\\r\",\n      \"test \\\"Tercer caso\\\" {\\r\",\n      \"paqueteDeLadrillos.cantidadDeLadrillos(350)\\r\",\n      \"camion.cargar(paqueteDeLadrillos)\\r\",\n      \"camion.cargar(arenaAGranel)   \\r\",\n      \"assert.equals(4, camion.cantidadDeBultosQueLleva()) \\r\",\n      \"}\\r\"\n    ]\n  ]\n}\n    at aS (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:64:34609)\n    at K1 (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:64:34682)\n    at c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:64:37949\n    at o.g1 (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:57:58803)\n    at c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:64:37918\n    at c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:57:56843\n    at Dfn (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:68:11441)\n    at c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:68:3629\n    at Array.map (<anonymous>)\n    at c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:68:4693","timestamp":"2025-10-17T12:53:09.313Z"}
{"errors":{"errors":[null,["/*\r","describe \"Venta mercado\" {\r","test \"venta\" {\r","personaje.position(game.at(2,2))\r","personaje.sembrarMaiz()\r","personaje.regar()\r","personaje.cosechar()\r","var nuevoMercado = new Mercado(position = game.at(1,1), monedas = 1000)\r","game.addVisual(nuevoMercado)\r","personaje.position(game.at(1,1))\r","personaje.vender()\r","assert.that(personaje.cantidadDeMonedas() == 150)\r","assert.that(personaje.listaDeVenta().isEmpty())\r","assert.that(nuevoMercado.monedas() == 850)\r","}\r","//////////////////////////////////////////////////////////////////////\r","/////////////////////////////////////////////////////////////////////\r","describe \"Camión cargando y descargando vehículos\" {\r","test \"Carga y descarga del camion\" {\r","// Carga inicial de bumblebee\r","camion.cargar(bumblebee) \r","assert.equals(#{bumblebee}, camion.cosas())\r","// Carga adicional de Knight Rider\r","camion.cargar(knightRider)\r","assert.equals(#{bumblebee, knightRider}, camion.cosas())\r","// Descarga de bumblebee\r","camion.descargar(bumblebee)\r","assert.equals(#{knightRider}, camion.cosas())\r","// Intento de carga duplicada de Knight Rider\r","assert.throwsException({camion.cargar(knightRider)})\r","// Intento de descarga de bumblebee cuando no está\r","assert.throwsException({camion.descargar(bumblebee)})\r","}\r","}\r","describe \"Validación de pesos en el camión\"{\r","test \"Todo peso par\" {\r","arenaAGranel.peso(50)\r","camion.cargar(bumblebee)\r","camion.cargar(arenaAGranel)\r","assert.that(camion.todoPesoEsPar())\r","}\r","test \"Todo peso es impar\"{  \r","arenaAGranel.peso(51)\r","camion.cargar(bumblebee)\r","camion.cargar(arenaAGranel)\r","assert.notThat(camion.todoPesoEsPar())\r","}\r","test \"Hay alguno que pesa\" {\r","arenaAGranel.peso(50) \r","camion.cargar(bumblebee)\r","camion.cargar(arenaAGranel)\r","assert.that(camion.tieneCosaConPeso(50))\r","assert.that(camion.tieneCosaConPeso(800))\r","assert.notThat(camion.tieneCosaConPeso(500))\r","}\r","test \"Peso no excedido\" {\r","paqueteDeLadrillos.cantidadDeLadrillos(300)\r","camion.cargar(bumblebee)\r","camion.cargar(paqueteDeLadrillos)\r","assert.notThat(camion.pesoExcedido())\r","}\r","test \"Peso excedido\" {\r","paqueteDeLadrillos.cantidadDeLadrillos(400)\r","camion.cargar(bumblebee)\r","camion.cargar(paqueteDeLadrillos)\r","assert.that(camion.pesoExcedido())\r","}\r","}   \r","describe \"Peligrosidad de los objetos \"{\r","test \"Nivel de peligrosidad\" {\r","bumblebee.tranformarEn(auto)\r","bateriaAntiaerea.misiles(descargado)\r","camion.cargar(bateriaAntiaerea)\r","camion.cargar(bumblebee)\r","camion.cargar(residuosRadiactivos)\r","assert.equals(bateriaAntiaerea, camion.cantidadDePeligrosidadDe(0))\r","assert.equals(bumblebee, camion.cantidadDePeligrosidadDe(15))\r","assert.equals(residuosRadiactivos, camion.cantidadDePeligrosidadDe(200))\r","assert.throwsException({ => camion.cantidadDePeligrosidadDe(30) })\r","bumblebee.tranformarEn(robot)\r","assert.equals(bumblebee, camion.cantidadDePeligrosidadDe(30))\r","bateriaAntiaerea.misiles(cargado)\r","assert.equals(bateriaAntiaerea, camion.cantidadDePeligrosidadDe(100))\r","}\r","test \"Cosas peligrosas\" {\r","bateriaAntiaerea.misiles(cargado)\r","camion.cargar(knightRider)\r","camion.cargar(bateriaAntiaerea)\r","assert.equals(#{bateriaAntiaerea}, camion.cosasMasPeligrosasQueNivel(15))\r","assert.equals(#{bateriaAntiaerea}, camion.cosasMasPeligrosasQue(bumblebee))\r","assert.equals(#{knightRider, bateriaAntiaerea}, camion.cosasMasPeligrosasQueNivel(2))\r","assert.equals(#{bateriaAntiaerea, knightRider}, camion.cosasMasPeligrosasQue(paqueteDeLadrillos))\r","assert.equals(#{}, camion.cosasMasPeligrosasQueNivel(300))\r","assert.equals(#{},camion.cosasMasPeligrosasQue(residuosRadiactivos))\r","} \r","}\r","describe \"Circular en la ruta\" {\r","test \"Puede circular con bumblebee en auto y 300 ladrillos en ruta nivel 20\" {\r","bumblebee.tranformarEn(auto) \r","paqueteDeLadrillos.cantidadDeLadrillos(300) \r","camion.cargar(bumblebee)\r","camion.cargar(paqueteDeLadrillos)\r","assert.that(camion.puedeCircularRutaDeNivel(20))\r","}\r","test \"No puede circular con bumblebee en auto y 400 ladrillos en ruta nivel 20 (exceso de peso)\" {\r","bumblebee.tranformarEn(auto) \r","paqueteDeLadrillos.cantidadDeLadrillos(400) \r","camion.cargar(bumblebee)\r","camion.cargar(paqueteDeLadrillos)\r","assert.notThat(camion.puedeCircularRutaDeNivel(20))\r","}\r","test \"No puede circular con bumblebee en modo robot y 300 ladrillos en ruta nivel 20 (exceso de peligrosidad)\" {\r","bumblebee.tranformarEn(robot) \r","paqueteDeLadrillos.cantidadDeLadrillos(300)\r","camion.cargar(bumblebee)\r","camion.cargar(paqueteDeLadrillos)\r","assert.notThat(camion.puedeCircularRutaDeNivel(20))\r","}\r","}\r","describe \"mas Cosas\"{\r","test \"contenedor Portuario vacio\" {\r","assert.equals(100, contenedorPortuario.peso())\r","assert.equals(0, contenedorPortuario.nivelPeligrosidad())\r","}\r","test \"Contenedor cargado con Knight Rider y 50 kg de arena a granel\" {\r","contenedorPortuario.cargarCosaAContenedor(knightRider)\r","arenaAGranel.peso(50)\r","contenedorPortuario.cargarCosaAContenedor(arenaAGranel)\r","assert.equals(650, contenedorPortuario.peso())\r","assert.equals(10, contenedorPortuario.nivelPeligrosidad())\r","}\r","test \"Embalaje de seguridad para Knight Rider\" {\r","embalajeDeSeguridad.embalar(knightRider)\r","assert.equals(500, embalajeDeSeguridad.peso())\r","assert.equals(5, embalajeDeSeguridad.nivelPeligrosidad())\r","}\r","test \"Embalaje de seguridad para Bumbleblee en modo auto\" {\r","bumblebee.tranformarEn(auto)\r","embalajeDeSeguridad.embalar(bumblebee)\r","assert.equals(800, embalajeDeSeguridad.peso())\r","assert.equals(7.5, embalajeDeSeguridad.nivelPeligrosidad())\r","}\r","}\r","describe \"Cosa con con peso entre un valor maximo y minimo\" {\r","method initialize(){\r","paqueteDeLadrillos.cantidadDeLadrillos(300)\r","camion.cargar(bumblebee) //800\r","camion.cargar(paqueteDeLadrillos) //600\r","}\r","test \"No tiene algo que pesa entre 5 y 100\" {\r","assert.throwsException({ camion.cosaQuePesaEntreLosValores(5, 100) })\r","}\r","test \"Tiene algo que pesa entre 5 y 1000\" {\r","assert.equals(true, camion.cosaQuePesaEntreLosValores(5, 1000) != null)\r","}\r","test \"No tiene algo que pese entre 900 y 1000\" { \r","assert.throwsException({ camion.cosaQuePesaEntreLosValores(900, 1000) })\r","}\r","}\r","describe \"Todos los pesos de las cosas que tiene cargado el camion\" {\r","test \"Peso de Bumblebee y Paquete de ladrillos\" {\r","paqueteDeLadrillos.cantidadDeLadrillos(300)\r","camion.cargar(bumblebee)\r","camion.cargar(paqueteDeLadrillos)\r","assert.equals([800,600], camion.pesoDeLasCosasCargadas())\r","}\r","}\r","describe \"Bultos que carga el camion\" {\r","test \"Primer caso\" {\r","contenedorPortuario.cargarCosaAContenedor(knightRider)\r","contenedorPortuario.cargarCosaAContenedor(bumblebee)\r","camion.cargar(contenedorPortuario)  \r","embalajeDeSeguridad.embalar(residuosRadiactivos)\r","camion.cargar(embalajeDeSeguridad)\r","camion.cargar(arenaAGranel)\r","paqueteDeLadrillos.cantidadDeLadrillos(50)\r","camion.cargar(paqueteDeLadrillos)\r","bateriaAntiaerea.misiles(descargado)\r","camion.cargar(bateriaAntiaerea)\r","assert.equals(9, camion.cantidadDeBultosQueLleva()) \r","}\r","test \"Segundo caso\" {\r","paqueteDeLadrillos.cantidadDeLadrillos(150)\r","camion.cargar(paqueteDeLadrillos)\r","bateriaAntiaerea.misiles(cargado)\r","camion.cargar(bateriaAntiaerea)   \r","camion.cargar(contenedorPortuario)  \r","assert.equals(5, camion.cantidadDeBultosQueLleva()) \r","}\r","test \"Tercer caso\" {\r","paqueteDeLadrillos.cantidadDeLadrillos(350)\r","camion.cargar(paqueteDeLadrillos)\r","camion.cargar(arenaAGranel)   \r","assert.equals(4, camion.cantidadDeBultosQueLleva()) \r","}\r"]]},"level":"error","message":"✘ Failed to get type description: Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"describe \\\"Venta mercado\\\" {\\r\",\n      \"test \\\"venta\\\" {\\r\",\n      \"personaje.position(game.at(2,2))\\r\",\n      \"personaje.sembrarMaiz()\\r\",\n      \"personaje.regar()\\r\",\n      \"personaje.cosechar()\\r\",\n      \"var nuevoMercado = new Mercado(position = game.at(1,1), monedas = 1000)\\r\",\n      \"game.addVisual(nuevoMercado)\\r\",\n      \"personaje.position(game.at(1,1))\\r\",\n      \"personaje.vender()\\r\",\n      \"assert.that(personaje.cantidadDeMonedas() == 150)\\r\",\n      \"assert.that(personaje.listaDeVenta().isEmpty())\\r\",\n      \"assert.that(nuevoMercado.monedas() == 850)\\r\",\n      \"}\\r\",\n      \"//////////////////////////////////////////////////////////////////////\\r\",\n      \"/////////////////////////////////////////////////////////////////////\\r\",\n      \"describe \\\"Camión cargando y descargando vehículos\\\" {\\r\",\n      \"test \\\"Carga y descarga del camion\\\" {\\r\",\n      \"// Carga inicial de bumblebee\\r\",\n      \"camion.cargar(bumblebee) \\r\",\n      \"assert.equals(#{bumblebee}, camion.cosas())\\r\",\n      \"// Carga adicional de Knight Rider\\r\",\n      \"camion.cargar(knightRider)\\r\",\n      \"assert.equals(#{bumblebee, knightRider}, camion.cosas())\\r\",\n      \"// Descarga de bumblebee\\r\",\n      \"camion.descargar(bumblebee)\\r\",\n      \"assert.equals(#{knightRider}, camion.cosas())\\r\",\n      \"// Intento de carga duplicada de Knight Rider\\r\",\n      \"assert.throwsException({camion.cargar(knightRider)})\\r\",\n      \"// Intento de descarga de bumblebee cuando no está\\r\",\n      \"assert.throwsException({camion.descargar(bumblebee)})\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"describe \\\"Validación de pesos en el camión\\\"{\\r\",\n      \"test \\\"Todo peso par\\\" {\\r\",\n      \"arenaAGranel.peso(50)\\r\",\n      \"camion.cargar(bumblebee)\\r\",\n      \"camion.cargar(arenaAGranel)\\r\",\n      \"assert.that(camion.todoPesoEsPar())\\r\",\n      \"}\\r\",\n      \"test \\\"Todo peso es impar\\\"{  \\r\",\n      \"arenaAGranel.peso(51)\\r\",\n      \"camion.cargar(bumblebee)\\r\",\n      \"camion.cargar(arenaAGranel)\\r\",\n      \"assert.notThat(camion.todoPesoEsPar())\\r\",\n      \"}\\r\",\n      \"test \\\"Hay alguno que pesa\\\" {\\r\",\n      \"arenaAGranel.peso(50) \\r\",\n      \"camion.cargar(bumblebee)\\r\",\n      \"camion.cargar(arenaAGranel)\\r\",\n      \"assert.that(camion.tieneCosaConPeso(50))\\r\",\n      \"assert.that(camion.tieneCosaConPeso(800))\\r\",\n      \"assert.notThat(camion.tieneCosaConPeso(500))\\r\",\n      \"}\\r\",\n      \"test \\\"Peso no excedido\\\" {\\r\",\n      \"paqueteDeLadrillos.cantidadDeLadrillos(300)\\r\",\n      \"camion.cargar(bumblebee)\\r\",\n      \"camion.cargar(paqueteDeLadrillos)\\r\",\n      \"assert.notThat(camion.pesoExcedido())\\r\",\n      \"}\\r\",\n      \"test \\\"Peso excedido\\\" {\\r\",\n      \"paqueteDeLadrillos.cantidadDeLadrillos(400)\\r\",\n      \"camion.cargar(bumblebee)\\r\",\n      \"camion.cargar(paqueteDeLadrillos)\\r\",\n      \"assert.that(camion.pesoExcedido())\\r\",\n      \"}\\r\",\n      \"}   \\r\",\n      \"describe \\\"Peligrosidad de los objetos \\\"{\\r\",\n      \"test \\\"Nivel de peligrosidad\\\" {\\r\",\n      \"bumblebee.tranformarEn(auto)\\r\",\n      \"bateriaAntiaerea.misiles(descargado)\\r\",\n      \"camion.cargar(bateriaAntiaerea)\\r\",\n      \"camion.cargar(bumblebee)\\r\",\n      \"camion.cargar(residuosRadiactivos)\\r\",\n      \"assert.equals(bateriaAntiaerea, camion.cantidadDePeligrosidadDe(0))\\r\",\n      \"assert.equals(bumblebee, camion.cantidadDePeligrosidadDe(15))\\r\",\n      \"assert.equals(residuosRadiactivos, camion.cantidadDePeligrosidadDe(200))\\r\",\n      \"assert.throwsException({ => camion.cantidadDePeligrosidadDe(30) })\\r\",\n      \"bumblebee.tranformarEn(robot)\\r\",\n      \"assert.equals(bumblebee, camion.cantidadDePeligrosidadDe(30))\\r\",\n      \"bateriaAntiaerea.misiles(cargado)\\r\",\n      \"assert.equals(bateriaAntiaerea, camion.cantidadDePeligrosidadDe(100))\\r\",\n      \"}\\r\",\n      \"test \\\"Cosas peligrosas\\\" {\\r\",\n      \"bateriaAntiaerea.misiles(cargado)\\r\",\n      \"camion.cargar(knightRider)\\r\",\n      \"camion.cargar(bateriaAntiaerea)\\r\",\n      \"assert.equals(#{bateriaAntiaerea}, camion.cosasMasPeligrosasQueNivel(15))\\r\",\n      \"assert.equals(#{bateriaAntiaerea}, camion.cosasMasPeligrosasQue(bumblebee))\\r\",\n      \"assert.equals(#{knightRider, bateriaAntiaerea}, camion.cosasMasPeligrosasQueNivel(2))\\r\",\n      \"assert.equals(#{bateriaAntiaerea, knightRider}, camion.cosasMasPeligrosasQue(paqueteDeLadrillos))\\r\",\n      \"assert.equals(#{}, camion.cosasMasPeligrosasQueNivel(300))\\r\",\n      \"assert.equals(#{},camion.cosasMasPeligrosasQue(residuosRadiactivos))\\r\",\n      \"} \\r\",\n      \"}\\r\",\n      \"describe \\\"Circular en la ruta\\\" {\\r\",\n      \"test \\\"Puede circular con bumblebee en auto y 300 ladrillos en ruta nivel 20\\\" {\\r\",\n      \"bumblebee.tranformarEn(auto) \\r\",\n      \"paqueteDeLadrillos.cantidadDeLadrillos(300) \\r\",\n      \"camion.cargar(bumblebee)\\r\",\n      \"camion.cargar(paqueteDeLadrillos)\\r\",\n      \"assert.that(camion.puedeCircularRutaDeNivel(20))\\r\",\n      \"}\\r\",\n      \"test \\\"No puede circular con bumblebee en auto y 400 ladrillos en ruta nivel 20 (exceso de peso)\\\" {\\r\",\n      \"bumblebee.tranformarEn(auto) \\r\",\n      \"paqueteDeLadrillos.cantidadDeLadrillos(400) \\r\",\n      \"camion.cargar(bumblebee)\\r\",\n      \"camion.cargar(paqueteDeLadrillos)\\r\",\n      \"assert.notThat(camion.puedeCircularRutaDeNivel(20))\\r\",\n      \"}\\r\",\n      \"test \\\"No puede circular con bumblebee en modo robot y 300 ladrillos en ruta nivel 20 (exceso de peligrosidad)\\\" {\\r\",\n      \"bumblebee.tranformarEn(robot) \\r\",\n      \"paqueteDeLadrillos.cantidadDeLadrillos(300)\\r\",\n      \"camion.cargar(bumblebee)\\r\",\n      \"camion.cargar(paqueteDeLadrillos)\\r\",\n      \"assert.notThat(camion.puedeCircularRutaDeNivel(20))\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"describe \\\"mas Cosas\\\"{\\r\",\n      \"test \\\"contenedor Portuario vacio\\\" {\\r\",\n      \"assert.equals(100, contenedorPortuario.peso())\\r\",\n      \"assert.equals(0, contenedorPortuario.nivelPeligrosidad())\\r\",\n      \"}\\r\",\n      \"test \\\"Contenedor cargado con Knight Rider y 50 kg de arena a granel\\\" {\\r\",\n      \"contenedorPortuario.cargarCosaAContenedor(knightRider)\\r\",\n      \"arenaAGranel.peso(50)\\r\",\n      \"contenedorPortuario.cargarCosaAContenedor(arenaAGranel)\\r\",\n      \"assert.equals(650, contenedorPortuario.peso())\\r\",\n      \"assert.equals(10, contenedorPortuario.nivelPeligrosidad())\\r\",\n      \"}\\r\",\n      \"test \\\"Embalaje de seguridad para Knight Rider\\\" {\\r\",\n      \"embalajeDeSeguridad.embalar(knightRider)\\r\",\n      \"assert.equals(500, embalajeDeSeguridad.peso())\\r\",\n      \"assert.equals(5, embalajeDeSeguridad.nivelPeligrosidad())\\r\",\n      \"}\\r\",\n      \"test \\\"Embalaje de seguridad para Bumbleblee en modo auto\\\" {\\r\",\n      \"bumblebee.tranformarEn(auto)\\r\",\n      \"embalajeDeSeguridad.embalar(bumblebee)\\r\",\n      \"assert.equals(800, embalajeDeSeguridad.peso())\\r\",\n      \"assert.equals(7.5, embalajeDeSeguridad.nivelPeligrosidad())\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"describe \\\"Cosa con con peso entre un valor maximo y minimo\\\" {\\r\",\n      \"method initialize(){\\r\",\n      \"paqueteDeLadrillos.cantidadDeLadrillos(300)\\r\",\n      \"camion.cargar(bumblebee) //800\\r\",\n      \"camion.cargar(paqueteDeLadrillos) //600\\r\",\n      \"}\\r\",\n      \"test \\\"No tiene algo que pesa entre 5 y 100\\\" {\\r\",\n      \"assert.throwsException({ camion.cosaQuePesaEntreLosValores(5, 100) })\\r\",\n      \"}\\r\",\n      \"test \\\"Tiene algo que pesa entre 5 y 1000\\\" {\\r\",\n      \"assert.equals(true, camion.cosaQuePesaEntreLosValores(5, 1000) != null)\\r\",\n      \"}\\r\",\n      \"test \\\"No tiene algo que pese entre 900 y 1000\\\" { \\r\",\n      \"assert.throwsException({ camion.cosaQuePesaEntreLosValores(900, 1000) })\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"describe \\\"Todos los pesos de las cosas que tiene cargado el camion\\\" {\\r\",\n      \"test \\\"Peso de Bumblebee y Paquete de ladrillos\\\" {\\r\",\n      \"paqueteDeLadrillos.cantidadDeLadrillos(300)\\r\",\n      \"camion.cargar(bumblebee)\\r\",\n      \"camion.cargar(paqueteDeLadrillos)\\r\",\n      \"assert.equals([800,600], camion.pesoDeLasCosasCargadas())\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"describe \\\"Bultos que carga el camion\\\" {\\r\",\n      \"test \\\"Primer caso\\\" {\\r\",\n      \"contenedorPortuario.cargarCosaAContenedor(knightRider)\\r\",\n      \"contenedorPortuario.cargarCosaAContenedor(bumblebee)\\r\",\n      \"camion.cargar(contenedorPortuario)  \\r\",\n      \"embalajeDeSeguridad.embalar(residuosRadiactivos)\\r\",\n      \"camion.cargar(embalajeDeSeguridad)\\r\",\n      \"camion.cargar(arenaAGranel)\\r\",\n      \"paqueteDeLadrillos.cantidadDeLadrillos(50)\\r\",\n      \"camion.cargar(paqueteDeLadrillos)\\r\",\n      \"bateriaAntiaerea.misiles(descargado)\\r\",\n      \"camion.cargar(bateriaAntiaerea)\\r\",\n      \"assert.equals(9, camion.cantidadDeBultosQueLleva()) \\r\",\n      \"}\\r\",\n      \"test \\\"Segundo caso\\\" {\\r\",\n      \"paqueteDeLadrillos.cantidadDeLadrillos(150)\\r\",\n      \"camion.cargar(paqueteDeLadrillos)\\r\",\n      \"bateriaAntiaerea.misiles(cargado)\\r\",\n      \"camion.cargar(bateriaAntiaerea)   \\r\",\n      \"camion.cargar(contenedorPortuario)  \\r\",\n      \"assert.equals(5, camion.cantidadDeBultosQueLleva()) \\r\",\n      \"}\\r\",\n      \"test \\\"Tercer caso\\\" {\\r\",\n      \"paqueteDeLadrillos.cantidadDeLadrillos(350)\\r\",\n      \"camion.cargar(paqueteDeLadrillos)\\r\",\n      \"camion.cargar(arenaAGranel)   \\r\",\n      \"assert.equals(4, camion.cantidadDeBultosQueLleva()) \\r\",\n      \"}\\r\"\n    ]\n  ]\n} {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"describe \\\"Venta mercado\\\" {\\r\",\n      \"test \\\"venta\\\" {\\r\",\n      \"personaje.position(game.at(2,2))\\r\",\n      \"personaje.sembrarMaiz()\\r\",\n      \"personaje.regar()\\r\",\n      \"personaje.cosechar()\\r\",\n      \"var nuevoMercado = new Mercado(position = game.at(1,1), monedas = 1000)\\r\",\n      \"game.addVisual(nuevoMercado)\\r\",\n      \"personaje.position(game.at(1,1))\\r\",\n      \"personaje.vender()\\r\",\n      \"assert.that(personaje.cantidadDeMonedas() == 150)\\r\",\n      \"assert.that(personaje.listaDeVenta().isEmpty())\\r\",\n      \"assert.that(nuevoMercado.monedas() == 850)\\r\",\n      \"}\\r\",\n      \"//////////////////////////////////////////////////////////////////////\\r\",\n      \"/////////////////////////////////////////////////////////////////////\\r\",\n      \"describe \\\"Camión cargando y descargando vehículos\\\" {\\r\",\n      \"test \\\"Carga y descarga del camion\\\" {\\r\",\n      \"// Carga inicial de bumblebee\\r\",\n      \"camion.cargar(bumblebee) \\r\",\n      \"assert.equals(#{bumblebee}, camion.cosas())\\r\",\n      \"// Carga adicional de Knight Rider\\r\",\n      \"camion.cargar(knightRider)\\r\",\n      \"assert.equals(#{bumblebee, knightRider}, camion.cosas())\\r\",\n      \"// Descarga de bumblebee\\r\",\n      \"camion.descargar(bumblebee)\\r\",\n      \"assert.equals(#{knightRider}, camion.cosas())\\r\",\n      \"// Intento de carga duplicada de Knight Rider\\r\",\n      \"assert.throwsException({camion.cargar(knightRider)})\\r\",\n      \"// Intento de descarga de bumblebee cuando no está\\r\",\n      \"assert.throwsException({camion.descargar(bumblebee)})\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"describe \\\"Validación de pesos en el camión\\\"{\\r\",\n      \"test \\\"Todo peso par\\\" {\\r\",\n      \"arenaAGranel.peso(50)\\r\",\n      \"camion.cargar(bumblebee)\\r\",\n      \"camion.cargar(arenaAGranel)\\r\",\n      \"assert.that(camion.todoPesoEsPar())\\r\",\n      \"}\\r\",\n      \"test \\\"Todo peso es impar\\\"{  \\r\",\n      \"arenaAGranel.peso(51)\\r\",\n      \"camion.cargar(bumblebee)\\r\",\n      \"camion.cargar(arenaAGranel)\\r\",\n      \"assert.notThat(camion.todoPesoEsPar())\\r\",\n      \"}\\r\",\n      \"test \\\"Hay alguno que pesa\\\" {\\r\",\n      \"arenaAGranel.peso(50) \\r\",\n      \"camion.cargar(bumblebee)\\r\",\n      \"camion.cargar(arenaAGranel)\\r\",\n      \"assert.that(camion.tieneCosaConPeso(50))\\r\",\n      \"assert.that(camion.tieneCosaConPeso(800))\\r\",\n      \"assert.notThat(camion.tieneCosaConPeso(500))\\r\",\n      \"}\\r\",\n      \"test \\\"Peso no excedido\\\" {\\r\",\n      \"paqueteDeLadrillos.cantidadDeLadrillos(300)\\r\",\n      \"camion.cargar(bumblebee)\\r\",\n      \"camion.cargar(paqueteDeLadrillos)\\r\",\n      \"assert.notThat(camion.pesoExcedido())\\r\",\n      \"}\\r\",\n      \"test \\\"Peso excedido\\\" {\\r\",\n      \"paqueteDeLadrillos.cantidadDeLadrillos(400)\\r\",\n      \"camion.cargar(bumblebee)\\r\",\n      \"camion.cargar(paqueteDeLadrillos)\\r\",\n      \"assert.that(camion.pesoExcedido())\\r\",\n      \"}\\r\",\n      \"}   \\r\",\n      \"describe \\\"Peligrosidad de los objetos \\\"{\\r\",\n      \"test \\\"Nivel de peligrosidad\\\" {\\r\",\n      \"bumblebee.tranformarEn(auto)\\r\",\n      \"bateriaAntiaerea.misiles(descargado)\\r\",\n      \"camion.cargar(bateriaAntiaerea)\\r\",\n      \"camion.cargar(bumblebee)\\r\",\n      \"camion.cargar(residuosRadiactivos)\\r\",\n      \"assert.equals(bateriaAntiaerea, camion.cantidadDePeligrosidadDe(0))\\r\",\n      \"assert.equals(bumblebee, camion.cantidadDePeligrosidadDe(15))\\r\",\n      \"assert.equals(residuosRadiactivos, camion.cantidadDePeligrosidadDe(200))\\r\",\n      \"assert.throwsException({ => camion.cantidadDePeligrosidadDe(30) })\\r\",\n      \"bumblebee.tranformarEn(robot)\\r\",\n      \"assert.equals(bumblebee, camion.cantidadDePeligrosidadDe(30))\\r\",\n      \"bateriaAntiaerea.misiles(cargado)\\r\",\n      \"assert.equals(bateriaAntiaerea, camion.cantidadDePeligrosidadDe(100))\\r\",\n      \"}\\r\",\n      \"test \\\"Cosas peligrosas\\\" {\\r\",\n      \"bateriaAntiaerea.misiles(cargado)\\r\",\n      \"camion.cargar(knightRider)\\r\",\n      \"camion.cargar(bateriaAntiaerea)\\r\",\n      \"assert.equals(#{bateriaAntiaerea}, camion.cosasMasPeligrosasQueNivel(15))\\r\",\n      \"assert.equals(#{bateriaAntiaerea}, camion.cosasMasPeligrosasQue(bumblebee))\\r\",\n      \"assert.equals(#{knightRider, bateriaAntiaerea}, camion.cosasMasPeligrosasQueNivel(2))\\r\",\n      \"assert.equals(#{bateriaAntiaerea, knightRider}, camion.cosasMasPeligrosasQue(paqueteDeLadrillos))\\r\",\n      \"assert.equals(#{}, camion.cosasMasPeligrosasQueNivel(300))\\r\",\n      \"assert.equals(#{},camion.cosasMasPeligrosasQue(residuosRadiactivos))\\r\",\n      \"} \\r\",\n      \"}\\r\",\n      \"describe \\\"Circular en la ruta\\\" {\\r\",\n      \"test \\\"Puede circular con bumblebee en auto y 300 ladrillos en ruta nivel 20\\\" {\\r\",\n      \"bumblebee.tranformarEn(auto) \\r\",\n      \"paqueteDeLadrillos.cantidadDeLadrillos(300) \\r\",\n      \"camion.cargar(bumblebee)\\r\",\n      \"camion.cargar(paqueteDeLadrillos)\\r\",\n      \"assert.that(camion.puedeCircularRutaDeNivel(20))\\r\",\n      \"}\\r\",\n      \"test \\\"No puede circular con bumblebee en auto y 400 ladrillos en ruta nivel 20 (exceso de peso)\\\" {\\r\",\n      \"bumblebee.tranformarEn(auto) \\r\",\n      \"paqueteDeLadrillos.cantidadDeLadrillos(400) \\r\",\n      \"camion.cargar(bumblebee)\\r\",\n      \"camion.cargar(paqueteDeLadrillos)\\r\",\n      \"assert.notThat(camion.puedeCircularRutaDeNivel(20))\\r\",\n      \"}\\r\",\n      \"test \\\"No puede circular con bumblebee en modo robot y 300 ladrillos en ruta nivel 20 (exceso de peligrosidad)\\\" {\\r\",\n      \"bumblebee.tranformarEn(robot) \\r\",\n      \"paqueteDeLadrillos.cantidadDeLadrillos(300)\\r\",\n      \"camion.cargar(bumblebee)\\r\",\n      \"camion.cargar(paqueteDeLadrillos)\\r\",\n      \"assert.notThat(camion.puedeCircularRutaDeNivel(20))\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"describe \\\"mas Cosas\\\"{\\r\",\n      \"test \\\"contenedor Portuario vacio\\\" {\\r\",\n      \"assert.equals(100, contenedorPortuario.peso())\\r\",\n      \"assert.equals(0, contenedorPortuario.nivelPeligrosidad())\\r\",\n      \"}\\r\",\n      \"test \\\"Contenedor cargado con Knight Rider y 50 kg de arena a granel\\\" {\\r\",\n      \"contenedorPortuario.cargarCosaAContenedor(knightRider)\\r\",\n      \"arenaAGranel.peso(50)\\r\",\n      \"contenedorPortuario.cargarCosaAContenedor(arenaAGranel)\\r\",\n      \"assert.equals(650, contenedorPortuario.peso())\\r\",\n      \"assert.equals(10, contenedorPortuario.nivelPeligrosidad())\\r\",\n      \"}\\r\",\n      \"test \\\"Embalaje de seguridad para Knight Rider\\\" {\\r\",\n      \"embalajeDeSeguridad.embalar(knightRider)\\r\",\n      \"assert.equals(500, embalajeDeSeguridad.peso())\\r\",\n      \"assert.equals(5, embalajeDeSeguridad.nivelPeligrosidad())\\r\",\n      \"}\\r\",\n      \"test \\\"Embalaje de seguridad para Bumbleblee en modo auto\\\" {\\r\",\n      \"bumblebee.tranformarEn(auto)\\r\",\n      \"embalajeDeSeguridad.embalar(bumblebee)\\r\",\n      \"assert.equals(800, embalajeDeSeguridad.peso())\\r\",\n      \"assert.equals(7.5, embalajeDeSeguridad.nivelPeligrosidad())\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"describe \\\"Cosa con con peso entre un valor maximo y minimo\\\" {\\r\",\n      \"method initialize(){\\r\",\n      \"paqueteDeLadrillos.cantidadDeLadrillos(300)\\r\",\n      \"camion.cargar(bumblebee) //800\\r\",\n      \"camion.cargar(paqueteDeLadrillos) //600\\r\",\n      \"}\\r\",\n      \"test \\\"No tiene algo que pesa entre 5 y 100\\\" {\\r\",\n      \"assert.throwsException({ camion.cosaQuePesaEntreLosValores(5, 100) })\\r\",\n      \"}\\r\",\n      \"test \\\"Tiene algo que pesa entre 5 y 1000\\\" {\\r\",\n      \"assert.equals(true, camion.cosaQuePesaEntreLosValores(5, 1000) != null)\\r\",\n      \"}\\r\",\n      \"test \\\"No tiene algo que pese entre 900 y 1000\\\" { \\r\",\n      \"assert.throwsException({ camion.cosaQuePesaEntreLosValores(900, 1000) })\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"describe \\\"Todos los pesos de las cosas que tiene cargado el camion\\\" {\\r\",\n      \"test \\\"Peso de Bumblebee y Paquete de ladrillos\\\" {\\r\",\n      \"paqueteDeLadrillos.cantidadDeLadrillos(300)\\r\",\n      \"camion.cargar(bumblebee)\\r\",\n      \"camion.cargar(paqueteDeLadrillos)\\r\",\n      \"assert.equals([800,600], camion.pesoDeLasCosasCargadas())\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"describe \\\"Bultos que carga el camion\\\" {\\r\",\n      \"test \\\"Primer caso\\\" {\\r\",\n      \"contenedorPortuario.cargarCosaAContenedor(knightRider)\\r\",\n      \"contenedorPortuario.cargarCosaAContenedor(bumblebee)\\r\",\n      \"camion.cargar(contenedorPortuario)  \\r\",\n      \"embalajeDeSeguridad.embalar(residuosRadiactivos)\\r\",\n      \"camion.cargar(embalajeDeSeguridad)\\r\",\n      \"camion.cargar(arenaAGranel)\\r\",\n      \"paqueteDeLadrillos.cantidadDeLadrillos(50)\\r\",\n      \"camion.cargar(paqueteDeLadrillos)\\r\",\n      \"bateriaAntiaerea.misiles(descargado)\\r\",\n      \"camion.cargar(bateriaAntiaerea)\\r\",\n      \"assert.equals(9, camion.cantidadDeBultosQueLleva()) \\r\",\n      \"}\\r\",\n      \"test \\\"Segundo caso\\\" {\\r\",\n      \"paqueteDeLadrillos.cantidadDeLadrillos(150)\\r\",\n      \"camion.cargar(paqueteDeLadrillos)\\r\",\n      \"bateriaAntiaerea.misiles(cargado)\\r\",\n      \"camion.cargar(bateriaAntiaerea)   \\r\",\n      \"camion.cargar(contenedorPortuario)  \\r\",\n      \"assert.equals(5, camion.cantidadDeBultosQueLleva()) \\r\",\n      \"}\\r\",\n      \"test \\\"Tercer caso\\\" {\\r\",\n      \"paqueteDeLadrillos.cantidadDeLadrillos(350)\\r\",\n      \"camion.cargar(paqueteDeLadrillos)\\r\",\n      \"camion.cargar(arenaAGranel)   \\r\",\n      \"assert.equals(4, camion.cantidadDeBultosQueLleva()) \\r\",\n      \"}\\r\"\n    ]\n  ]\n}","stack":"Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"describe \\\"Venta mercado\\\" {\\r\",\n      \"test \\\"venta\\\" {\\r\",\n      \"personaje.position(game.at(2,2))\\r\",\n      \"personaje.sembrarMaiz()\\r\",\n      \"personaje.regar()\\r\",\n      \"personaje.cosechar()\\r\",\n      \"var nuevoMercado = new Mercado(position = game.at(1,1), monedas = 1000)\\r\",\n      \"game.addVisual(nuevoMercado)\\r\",\n      \"personaje.position(game.at(1,1))\\r\",\n      \"personaje.vender()\\r\",\n      \"assert.that(personaje.cantidadDeMonedas() == 150)\\r\",\n      \"assert.that(personaje.listaDeVenta().isEmpty())\\r\",\n      \"assert.that(nuevoMercado.monedas() == 850)\\r\",\n      \"}\\r\",\n      \"//////////////////////////////////////////////////////////////////////\\r\",\n      \"/////////////////////////////////////////////////////////////////////\\r\",\n      \"describe \\\"Camión cargando y descargando vehículos\\\" {\\r\",\n      \"test \\\"Carga y descarga del camion\\\" {\\r\",\n      \"// Carga inicial de bumblebee\\r\",\n      \"camion.cargar(bumblebee) \\r\",\n      \"assert.equals(#{bumblebee}, camion.cosas())\\r\",\n      \"// Carga adicional de Knight Rider\\r\",\n      \"camion.cargar(knightRider)\\r\",\n      \"assert.equals(#{bumblebee, knightRider}, camion.cosas())\\r\",\n      \"// Descarga de bumblebee\\r\",\n      \"camion.descargar(bumblebee)\\r\",\n      \"assert.equals(#{knightRider}, camion.cosas())\\r\",\n      \"// Intento de carga duplicada de Knight Rider\\r\",\n      \"assert.throwsException({camion.cargar(knightRider)})\\r\",\n      \"// Intento de descarga de bumblebee cuando no está\\r\",\n      \"assert.throwsException({camion.descargar(bumblebee)})\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"describe \\\"Validación de pesos en el camión\\\"{\\r\",\n      \"test \\\"Todo peso par\\\" {\\r\",\n      \"arenaAGranel.peso(50)\\r\",\n      \"camion.cargar(bumblebee)\\r\",\n      \"camion.cargar(arenaAGranel)\\r\",\n      \"assert.that(camion.todoPesoEsPar())\\r\",\n      \"}\\r\",\n      \"test \\\"Todo peso es impar\\\"{  \\r\",\n      \"arenaAGranel.peso(51)\\r\",\n      \"camion.cargar(bumblebee)\\r\",\n      \"camion.cargar(arenaAGranel)\\r\",\n      \"assert.notThat(camion.todoPesoEsPar())\\r\",\n      \"}\\r\",\n      \"test \\\"Hay alguno que pesa\\\" {\\r\",\n      \"arenaAGranel.peso(50) \\r\",\n      \"camion.cargar(bumblebee)\\r\",\n      \"camion.cargar(arenaAGranel)\\r\",\n      \"assert.that(camion.tieneCosaConPeso(50))\\r\",\n      \"assert.that(camion.tieneCosaConPeso(800))\\r\",\n      \"assert.notThat(camion.tieneCosaConPeso(500))\\r\",\n      \"}\\r\",\n      \"test \\\"Peso no excedido\\\" {\\r\",\n      \"paqueteDeLadrillos.cantidadDeLadrillos(300)\\r\",\n      \"camion.cargar(bumblebee)\\r\",\n      \"camion.cargar(paqueteDeLadrillos)\\r\",\n      \"assert.notThat(camion.pesoExcedido())\\r\",\n      \"}\\r\",\n      \"test \\\"Peso excedido\\\" {\\r\",\n      \"paqueteDeLadrillos.cantidadDeLadrillos(400)\\r\",\n      \"camion.cargar(bumblebee)\\r\",\n      \"camion.cargar(paqueteDeLadrillos)\\r\",\n      \"assert.that(camion.pesoExcedido())\\r\",\n      \"}\\r\",\n      \"}   \\r\",\n      \"describe \\\"Peligrosidad de los objetos \\\"{\\r\",\n      \"test \\\"Nivel de peligrosidad\\\" {\\r\",\n      \"bumblebee.tranformarEn(auto)\\r\",\n      \"bateriaAntiaerea.misiles(descargado)\\r\",\n      \"camion.cargar(bateriaAntiaerea)\\r\",\n      \"camion.cargar(bumblebee)\\r\",\n      \"camion.cargar(residuosRadiactivos)\\r\",\n      \"assert.equals(bateriaAntiaerea, camion.cantidadDePeligrosidadDe(0))\\r\",\n      \"assert.equals(bumblebee, camion.cantidadDePeligrosidadDe(15))\\r\",\n      \"assert.equals(residuosRadiactivos, camion.cantidadDePeligrosidadDe(200))\\r\",\n      \"assert.throwsException({ => camion.cantidadDePeligrosidadDe(30) })\\r\",\n      \"bumblebee.tranformarEn(robot)\\r\",\n      \"assert.equals(bumblebee, camion.cantidadDePeligrosidadDe(30))\\r\",\n      \"bateriaAntiaerea.misiles(cargado)\\r\",\n      \"assert.equals(bateriaAntiaerea, camion.cantidadDePeligrosidadDe(100))\\r\",\n      \"}\\r\",\n      \"test \\\"Cosas peligrosas\\\" {\\r\",\n      \"bateriaAntiaerea.misiles(cargado)\\r\",\n      \"camion.cargar(knightRider)\\r\",\n      \"camion.cargar(bateriaAntiaerea)\\r\",\n      \"assert.equals(#{bateriaAntiaerea}, camion.cosasMasPeligrosasQueNivel(15))\\r\",\n      \"assert.equals(#{bateriaAntiaerea}, camion.cosasMasPeligrosasQue(bumblebee))\\r\",\n      \"assert.equals(#{knightRider, bateriaAntiaerea}, camion.cosasMasPeligrosasQueNivel(2))\\r\",\n      \"assert.equals(#{bateriaAntiaerea, knightRider}, camion.cosasMasPeligrosasQue(paqueteDeLadrillos))\\r\",\n      \"assert.equals(#{}, camion.cosasMasPeligrosasQueNivel(300))\\r\",\n      \"assert.equals(#{},camion.cosasMasPeligrosasQue(residuosRadiactivos))\\r\",\n      \"} \\r\",\n      \"}\\r\",\n      \"describe \\\"Circular en la ruta\\\" {\\r\",\n      \"test \\\"Puede circular con bumblebee en auto y 300 ladrillos en ruta nivel 20\\\" {\\r\",\n      \"bumblebee.tranformarEn(auto) \\r\",\n      \"paqueteDeLadrillos.cantidadDeLadrillos(300) \\r\",\n      \"camion.cargar(bumblebee)\\r\",\n      \"camion.cargar(paqueteDeLadrillos)\\r\",\n      \"assert.that(camion.puedeCircularRutaDeNivel(20))\\r\",\n      \"}\\r\",\n      \"test \\\"No puede circular con bumblebee en auto y 400 ladrillos en ruta nivel 20 (exceso de peso)\\\" {\\r\",\n      \"bumblebee.tranformarEn(auto) \\r\",\n      \"paqueteDeLadrillos.cantidadDeLadrillos(400) \\r\",\n      \"camion.cargar(bumblebee)\\r\",\n      \"camion.cargar(paqueteDeLadrillos)\\r\",\n      \"assert.notThat(camion.puedeCircularRutaDeNivel(20))\\r\",\n      \"}\\r\",\n      \"test \\\"No puede circular con bumblebee en modo robot y 300 ladrillos en ruta nivel 20 (exceso de peligrosidad)\\\" {\\r\",\n      \"bumblebee.tranformarEn(robot) \\r\",\n      \"paqueteDeLadrillos.cantidadDeLadrillos(300)\\r\",\n      \"camion.cargar(bumblebee)\\r\",\n      \"camion.cargar(paqueteDeLadrillos)\\r\",\n      \"assert.notThat(camion.puedeCircularRutaDeNivel(20))\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"describe \\\"mas Cosas\\\"{\\r\",\n      \"test \\\"contenedor Portuario vacio\\\" {\\r\",\n      \"assert.equals(100, contenedorPortuario.peso())\\r\",\n      \"assert.equals(0, contenedorPortuario.nivelPeligrosidad())\\r\",\n      \"}\\r\",\n      \"test \\\"Contenedor cargado con Knight Rider y 50 kg de arena a granel\\\" {\\r\",\n      \"contenedorPortuario.cargarCosaAContenedor(knightRider)\\r\",\n      \"arenaAGranel.peso(50)\\r\",\n      \"contenedorPortuario.cargarCosaAContenedor(arenaAGranel)\\r\",\n      \"assert.equals(650, contenedorPortuario.peso())\\r\",\n      \"assert.equals(10, contenedorPortuario.nivelPeligrosidad())\\r\",\n      \"}\\r\",\n      \"test \\\"Embalaje de seguridad para Knight Rider\\\" {\\r\",\n      \"embalajeDeSeguridad.embalar(knightRider)\\r\",\n      \"assert.equals(500, embalajeDeSeguridad.peso())\\r\",\n      \"assert.equals(5, embalajeDeSeguridad.nivelPeligrosidad())\\r\",\n      \"}\\r\",\n      \"test \\\"Embalaje de seguridad para Bumbleblee en modo auto\\\" {\\r\",\n      \"bumblebee.tranformarEn(auto)\\r\",\n      \"embalajeDeSeguridad.embalar(bumblebee)\\r\",\n      \"assert.equals(800, embalajeDeSeguridad.peso())\\r\",\n      \"assert.equals(7.5, embalajeDeSeguridad.nivelPeligrosidad())\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"describe \\\"Cosa con con peso entre un valor maximo y minimo\\\" {\\r\",\n      \"method initialize(){\\r\",\n      \"paqueteDeLadrillos.cantidadDeLadrillos(300)\\r\",\n      \"camion.cargar(bumblebee) //800\\r\",\n      \"camion.cargar(paqueteDeLadrillos) //600\\r\",\n      \"}\\r\",\n      \"test \\\"No tiene algo que pesa entre 5 y 100\\\" {\\r\",\n      \"assert.throwsException({ camion.cosaQuePesaEntreLosValores(5, 100) })\\r\",\n      \"}\\r\",\n      \"test \\\"Tiene algo que pesa entre 5 y 1000\\\" {\\r\",\n      \"assert.equals(true, camion.cosaQuePesaEntreLosValores(5, 1000) != null)\\r\",\n      \"}\\r\",\n      \"test \\\"No tiene algo que pese entre 900 y 1000\\\" { \\r\",\n      \"assert.throwsException({ camion.cosaQuePesaEntreLosValores(900, 1000) })\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"describe \\\"Todos los pesos de las cosas que tiene cargado el camion\\\" {\\r\",\n      \"test \\\"Peso de Bumblebee y Paquete de ladrillos\\\" {\\r\",\n      \"paqueteDeLadrillos.cantidadDeLadrillos(300)\\r\",\n      \"camion.cargar(bumblebee)\\r\",\n      \"camion.cargar(paqueteDeLadrillos)\\r\",\n      \"assert.equals([800,600], camion.pesoDeLasCosasCargadas())\\r\",\n      \"}\\r\",\n      \"}\\r\",\n      \"describe \\\"Bultos que carga el camion\\\" {\\r\",\n      \"test \\\"Primer caso\\\" {\\r\",\n      \"contenedorPortuario.cargarCosaAContenedor(knightRider)\\r\",\n      \"contenedorPortuario.cargarCosaAContenedor(bumblebee)\\r\",\n      \"camion.cargar(contenedorPortuario)  \\r\",\n      \"embalajeDeSeguridad.embalar(residuosRadiactivos)\\r\",\n      \"camion.cargar(embalajeDeSeguridad)\\r\",\n      \"camion.cargar(arenaAGranel)\\r\",\n      \"paqueteDeLadrillos.cantidadDeLadrillos(50)\\r\",\n      \"camion.cargar(paqueteDeLadrillos)\\r\",\n      \"bateriaAntiaerea.misiles(descargado)\\r\",\n      \"camion.cargar(bateriaAntiaerea)\\r\",\n      \"assert.equals(9, camion.cantidadDeBultosQueLleva()) \\r\",\n      \"}\\r\",\n      \"test \\\"Segundo caso\\\" {\\r\",\n      \"paqueteDeLadrillos.cantidadDeLadrillos(150)\\r\",\n      \"camion.cargar(paqueteDeLadrillos)\\r\",\n      \"bateriaAntiaerea.misiles(cargado)\\r\",\n      \"camion.cargar(bateriaAntiaerea)   \\r\",\n      \"camion.cargar(contenedorPortuario)  \\r\",\n      \"assert.equals(5, camion.cantidadDeBultosQueLleva()) \\r\",\n      \"}\\r\",\n      \"test \\\"Tercer caso\\\" {\\r\",\n      \"paqueteDeLadrillos.cantidadDeLadrillos(350)\\r\",\n      \"camion.cargar(paqueteDeLadrillos)\\r\",\n      \"camion.cargar(arenaAGranel)   \\r\",\n      \"assert.equals(4, camion.cantidadDeBultosQueLleva()) \\r\",\n      \"}\\r\"\n    ]\n  ]\n}\n    at aS (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:64:34609)\n    at K1 (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:64:34682)\n    at c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:64:37949\n    at o.g1 (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:57:58803)\n    at c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:64:37918\n    at c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:57:56843\n    at Dfn (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:68:11441)\n    at c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:68:3629\n    at Array.map (<anonymous>)\n    at c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:68:4693","timestamp":"2025-10-17T12:53:12.470Z"}
{"level":"error","message":"✘ Failed to rebuild document Failed to parse tetsVilla.wtest: \n-- PARSING FAILED --------------------------------------------------\n\nGot the end of the input\n\nExpected one of the following: \n\n'@', 'const', 'method', 'only', 'override', 'test', 'var', '{', '}', any character/byte, comment, whitespace\n","stack":"Error: Failed to parse tetsVilla.wtest: \n-- PARSING FAILED --------------------------------------------------\n\nGot the end of the input\n\nExpected one of the following: \n\n'@', 'const', 'method', 'only', 'override', 'test', 'var', '{', '}', any character/byte, comment, whitespace\n\n    at c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:2348:13026\n    at Array.map (<anonymous>)\n    at W1n (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:2348:12950)\n    at U2.buildEnvironmentFrom (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:2393:5254)\n    at U2.updateEnvironmentWith (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:2393:4989)\n    at JF (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:2393:7383)\n    at F3.invoke (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:3:157334)\n    at o.fire (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:3:158104)\n    at c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:37:57871\n    at Zr (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:8:1561)","timestamp":"2025-10-17T12:53:28.414Z"}
{"level":"error","message":"✘ Failed to rebuild document Failed to parse tetsVilla.wtest: \n-- PARSING FAILED --------------------------------------------------\n\nGot the end of the input\n\nExpected one of the following: \n\n'@', 'const', 'method', 'only', 'override', 'test', 'var', '{', '}', any character/byte, comment, whitespace\n","stack":"Error: Failed to parse tetsVilla.wtest: \n-- PARSING FAILED --------------------------------------------------\n\nGot the end of the input\n\nExpected one of the following: \n\n'@', 'const', 'method', 'only', 'override', 'test', 'var', '{', '}', any character/byte, comment, whitespace\n\n    at c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:2348:13026\n    at Array.map (<anonymous>)\n    at W1n (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:2348:12950)\n    at U2.buildEnvironmentFrom (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:2393:5254)\n    at U2.updateEnvironmentWith (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:2393:4989)\n    at JF (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:2393:7383)\n    at F3.invoke (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:3:157334)\n    at o.fire (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:3:158104)\n    at c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:37:57871\n    at Zr (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:8:1561)","timestamp":"2025-10-17T12:53:29.502Z"}
{"level":"error","message":"✘ Failed to rebuild document Failed to parse tetsVilla.wtest: \n-- PARSING FAILED --------------------------------------------------\n\nGot the end of the input\n\nExpected one of the following: \n\n'@', 'const', 'method', 'only', 'override', 'test', 'var', '{', '}', any character/byte, comment, whitespace\n","stack":"Error: Failed to parse tetsVilla.wtest: \n-- PARSING FAILED --------------------------------------------------\n\nGot the end of the input\n\nExpected one of the following: \n\n'@', 'const', 'method', 'only', 'override', 'test', 'var', '{', '}', any character/byte, comment, whitespace\n\n    at c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:2348:13026\n    at Array.map (<anonymous>)\n    at W1n (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:2348:12950)\n    at U2.buildEnvironmentFrom (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:2393:5254)\n    at U2.updateEnvironmentWith (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:2393:4989)\n    at JF (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:2393:7383)\n    at F3.invoke (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:3:157334)\n    at o.fire (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:3:158104)\n    at c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:37:57871\n    at Zr (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:8:1561)","timestamp":"2025-10-17T12:53:33.285Z"}
{"errors":{"errors":[null,["/*\r","describe \"Venta mercado\" {\r","test \"venta\" {\r","personaje.position(game.at(2,2))\r","personaje.sembrarMaiz()\r","personaje.regar()\r","personaje.cosechar()\r","var nuevoMercado = new Mercado(position = game.at(1,1), monedas = 1000)\r","game.addVisual(nuevoMercado)\r","personaje.position(game.at(1,1))\r","personaje.vender()\r","assert.that(personaje.cantidadDeMonedas() == 150)\r","assert.that(personaje.listaDeVenta().isEmpty())\r","assert.that(nuevoMercado.monedas() == 850)\r","}\r"]]},"level":"error","message":"✘ Failed to get type description: Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"describe \\\"Venta mercado\\\" {\\r\",\n      \"test \\\"venta\\\" {\\r\",\n      \"personaje.position(game.at(2,2))\\r\",\n      \"personaje.sembrarMaiz()\\r\",\n      \"personaje.regar()\\r\",\n      \"personaje.cosechar()\\r\",\n      \"var nuevoMercado = new Mercado(position = game.at(1,1), monedas = 1000)\\r\",\n      \"game.addVisual(nuevoMercado)\\r\",\n      \"personaje.position(game.at(1,1))\\r\",\n      \"personaje.vender()\\r\",\n      \"assert.that(personaje.cantidadDeMonedas() == 150)\\r\",\n      \"assert.that(personaje.listaDeVenta().isEmpty())\\r\",\n      \"assert.that(nuevoMercado.monedas() == 850)\\r\",\n      \"}\\r\"\n    ]\n  ]\n} {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"describe \\\"Venta mercado\\\" {\\r\",\n      \"test \\\"venta\\\" {\\r\",\n      \"personaje.position(game.at(2,2))\\r\",\n      \"personaje.sembrarMaiz()\\r\",\n      \"personaje.regar()\\r\",\n      \"personaje.cosechar()\\r\",\n      \"var nuevoMercado = new Mercado(position = game.at(1,1), monedas = 1000)\\r\",\n      \"game.addVisual(nuevoMercado)\\r\",\n      \"personaje.position(game.at(1,1))\\r\",\n      \"personaje.vender()\\r\",\n      \"assert.that(personaje.cantidadDeMonedas() == 150)\\r\",\n      \"assert.that(personaje.listaDeVenta().isEmpty())\\r\",\n      \"assert.that(nuevoMercado.monedas() == 850)\\r\",\n      \"}\\r\"\n    ]\n  ]\n}","stack":"Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"describe \\\"Venta mercado\\\" {\\r\",\n      \"test \\\"venta\\\" {\\r\",\n      \"personaje.position(game.at(2,2))\\r\",\n      \"personaje.sembrarMaiz()\\r\",\n      \"personaje.regar()\\r\",\n      \"personaje.cosechar()\\r\",\n      \"var nuevoMercado = new Mercado(position = game.at(1,1), monedas = 1000)\\r\",\n      \"game.addVisual(nuevoMercado)\\r\",\n      \"personaje.position(game.at(1,1))\\r\",\n      \"personaje.vender()\\r\",\n      \"assert.that(personaje.cantidadDeMonedas() == 150)\\r\",\n      \"assert.that(personaje.listaDeVenta().isEmpty())\\r\",\n      \"assert.that(nuevoMercado.monedas() == 850)\\r\",\n      \"}\\r\"\n    ]\n  ]\n}\n    at aS (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:64:34609)\n    at K1 (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:64:34682)\n    at c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:64:37949\n    at o.g1 (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:57:58803)\n    at c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:64:37918\n    at c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:57:56843\n    at Dfn (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:68:11441)\n    at c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:68:3629\n    at Array.map (<anonymous>)\n    at c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:68:4693","timestamp":"2025-10-17T12:54:43.690Z"}
{"level":"error","message":"✘ Failed to rebuild document Failed to parse tetsVilla.wtest: \n-- PARSING FAILED --------------------------------------------------\n\n  76 | \n  77 | \n> 78 | }\n     | ^\n  79 | \n  80 | \n\nExpected one of the following: \n\n' ', '@', 'class', 'const', 'describe', 'mixin', 'object', 'only', 'package', 'program', 'test', 'var', '{', EOF, comment, not \"}\r\n\r\n\", whitespace\n","stack":"Error: Failed to parse tetsVilla.wtest: \n-- PARSING FAILED --------------------------------------------------\n\n  76 | \n  77 | \n> 78 | }\n     | ^\n  79 | \n  80 | \n\nExpected one of the following: \n\n' ', '@', 'class', 'const', 'describe', 'mixin', 'object', 'only', 'package', 'program', 'test', 'var', '{', EOF, comment, not \"}\r\n\r\n\", whitespace\n\n    at c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:2348:13026\n    at Array.map (<anonymous>)\n    at W1n (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:2348:12950)\n    at U2.buildEnvironmentFrom (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:2393:5254)\n    at U2.updateEnvironmentWith (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:2393:4989)\n    at JF (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:2393:7383)\n    at F3.invoke (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:3:157334)\n    at o.fire (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:3:158104)\n    at c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:37:57871\n    at Zr (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:8:1561)","timestamp":"2025-10-17T12:55:32.401Z"}
{"level":"error","message":"✘ Failed to rebuild document Failed to parse tetsVilla.wtest: \n-- PARSING FAILED --------------------------------------------------\n\n  75 | \n  76 | \n> 77 | }\n     | ^\n  78 | \n  79 | \n\nExpected one of the following: \n\n' ', '@', 'class', 'const', 'describe', 'mixin', 'object', 'only', 'package', 'program', 'test', 'var', '{', EOF, comment, not \"}\r\n\r\n\", whitespace\n","stack":"Error: Failed to parse tetsVilla.wtest: \n-- PARSING FAILED --------------------------------------------------\n\n  75 | \n  76 | \n> 77 | }\n     | ^\n  78 | \n  79 | \n\nExpected one of the following: \n\n' ', '@', 'class', 'const', 'describe', 'mixin', 'object', 'only', 'package', 'program', 'test', 'var', '{', EOF, comment, not \"}\r\n\r\n\", whitespace\n\n    at c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:2348:13026\n    at Array.map (<anonymous>)\n    at W1n (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:2348:12950)\n    at U2.buildEnvironmentFrom (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:2393:5254)\n    at U2.updateEnvironmentWith (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:2393:4989)\n    at JF (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:2393:7383)\n    at F3.invoke (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:3:157334)\n    at o.fire (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:3:158104)\n    at c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:37:57871\n    at Zr (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:8:1561)","timestamp":"2025-10-17T12:55:32.791Z"}
{"level":"error","message":"✘ Failed to rebuild document Failed to parse tetsVilla.wtest: \n-- PARSING FAILED --------------------------------------------------\n\n  74 | \n  75 | \n> 76 | }\n     | ^\n  77 | \n  78 | \n\nExpected one of the following: \n\n' ', '@', 'class', 'const', 'describe', 'mixin', 'object', 'only', 'package', 'program', 'test', 'var', '{', EOF, comment, not \"}\r\n\r\n\", whitespace\n","stack":"Error: Failed to parse tetsVilla.wtest: \n-- PARSING FAILED --------------------------------------------------\n\n  74 | \n  75 | \n> 76 | }\n     | ^\n  77 | \n  78 | \n\nExpected one of the following: \n\n' ', '@', 'class', 'const', 'describe', 'mixin', 'object', 'only', 'package', 'program', 'test', 'var', '{', EOF, comment, not \"}\r\n\r\n\", whitespace\n\n    at c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:2348:13026\n    at Array.map (<anonymous>)\n    at W1n (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:2348:12950)\n    at U2.buildEnvironmentFrom (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:2393:5254)\n    at U2.updateEnvironmentWith (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:2393:4989)\n    at JF (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:2393:7383)\n    at F3.invoke (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:3:157334)\n    at o.fire (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:3:158104)\n    at c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:37:57871\n    at Zr (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:8:1561)","timestamp":"2025-10-17T12:55:33.121Z"}
{"level":"error","message":"✘ Failed to rebuild document Failed to parse tetsVilla.wtest: \n-- PARSING FAILED --------------------------------------------------\n\n  73 | \n  74 | \n> 75 | }\n     | ^\n  76 | \n  77 | \n\nExpected one of the following: \n\n' ', '@', 'class', 'const', 'describe', 'mixin', 'object', 'only', 'package', 'program', 'test', 'var', '{', EOF, comment, not \"}\r\n\r\n\", whitespace\n","stack":"Error: Failed to parse tetsVilla.wtest: \n-- PARSING FAILED --------------------------------------------------\n\n  73 | \n  74 | \n> 75 | }\n     | ^\n  76 | \n  77 | \n\nExpected one of the following: \n\n' ', '@', 'class', 'const', 'describe', 'mixin', 'object', 'only', 'package', 'program', 'test', 'var', '{', EOF, comment, not \"}\r\n\r\n\", whitespace\n\n    at c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:2348:13026\n    at Array.map (<anonymous>)\n    at W1n (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:2348:12950)\n    at U2.buildEnvironmentFrom (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:2393:5254)\n    at U2.updateEnvironmentWith (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:2393:4989)\n    at JF (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:2393:7383)\n    at F3.invoke (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:3:157334)\n    at o.fire (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:3:158104)\n    at c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:37:57871\n    at Zr (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:8:1561)","timestamp":"2025-10-17T12:55:33.954Z"}
{"level":"error","message":"✘ Failed to rebuild document Failed to parse tetsVilla.wtest: \n-- PARSING FAILED --------------------------------------------------\n\n  72 | \n  73 | \n> 74 | }\n     | ^\n  75 | \n  76 | \n\nExpected one of the following: \n\n' ', '@', 'class', 'const', 'describe', 'mixin', 'object', 'only', 'package', 'program', 'test', 'var', '{', EOF, comment, not \"}\r\n\r\n\", whitespace\n","stack":"Error: Failed to parse tetsVilla.wtest: \n-- PARSING FAILED --------------------------------------------------\n\n  72 | \n  73 | \n> 74 | }\n     | ^\n  75 | \n  76 | \n\nExpected one of the following: \n\n' ', '@', 'class', 'const', 'describe', 'mixin', 'object', 'only', 'package', 'program', 'test', 'var', '{', EOF, comment, not \"}\r\n\r\n\", whitespace\n\n    at c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:2348:13026\n    at Array.map (<anonymous>)\n    at W1n (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:2348:12950)\n    at U2.buildEnvironmentFrom (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:2393:5254)\n    at U2.updateEnvironmentWith (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:2393:4989)\n    at JF (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:2393:7383)\n    at F3.invoke (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:3:157334)\n    at o.fire (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:3:158104)\n    at c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:37:57871\n    at Zr (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:8:1561)","timestamp":"2025-10-17T12:55:34.145Z"}
{"level":"error","message":"✘ Failed to rebuild document Failed to parse tetsVilla.wtest: \n-- PARSING FAILED --------------------------------------------------\n\n  71 | }\n  72 | \n> 73 | }\n     | ^\n  74 | \n  75 | \n\nExpected one of the following: \n\n' ', '@', 'class', 'const', 'describe', 'mixin', 'object', 'only', 'package', 'program', 'test', 'var', '{', EOF, comment, not \"}\r\n\r\n\", whitespace\n","stack":"Error: Failed to parse tetsVilla.wtest: \n-- PARSING FAILED --------------------------------------------------\n\n  71 | }\n  72 | \n> 73 | }\n     | ^\n  74 | \n  75 | \n\nExpected one of the following: \n\n' ', '@', 'class', 'const', 'describe', 'mixin', 'object', 'only', 'package', 'program', 'test', 'var', '{', EOF, comment, not \"}\r\n\r\n\", whitespace\n\n    at c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:2348:13026\n    at Array.map (<anonymous>)\n    at W1n (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:2348:12950)\n    at U2.buildEnvironmentFrom (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:2393:5254)\n    at U2.updateEnvironmentWith (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:2393:4989)\n    at JF (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:2393:7383)\n    at F3.invoke (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:3:157334)\n    at o.fire (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:3:158104)\n    at c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:37:57871\n    at Zr (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:8:1561)","timestamp":"2025-10-17T12:55:34.312Z"}
{"level":"info","message":"🧪 Test runner executed on c:\\Users\\janet\\Desktop\\actividades wollof\\2025c2s2-granja-villa-Gladys-fp","result":{"errored":1,"failed":0,"ok":0},"testsFailed":[{"error":["wollok.lang.EvaluationError: Error: Could not resolve reference to personaje.position","  at tetsVilla.\"Sembrar, regar y cosechar Tomate\".\"cosechar tomate\" [tetsVilla.wtest:44]"],"test":"tetsVilla.\"Sembrar, regar y cosechar Tomate\".\"cosechar tomate\""}],"timeElapsed":262,"timestamp":"2025-10-17T12:56:24.245Z"}
{"level":"error","message":"✘ Completions for node Assignment ([86:3, 86:15] - personaje.wlk) failed: Error: [Assignment]{f9317f} at personaje.wlk:86 exhausted all cases without a match [Assignment]{f9317f} at personaje.wlk:86 exhausted all cases without a match","stack":"Error: [Assignment]{f9317f} at personaje.wlk:86 exhausted all cases without a match\n    at c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:38:6142\n    at D2 (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:2384:42)\n    at Qh (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:2384:1092)\n    at k6n (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:2384:1248)\n    at c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:38:6131\n    at D2 (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:2384:42)\n    at c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:2384:2988\n    at c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:2393:8440\n    at c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:37:74872\n    at Ye (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:7:8527)","timestamp":"2025-10-17T12:59:32.670Z"}
{"level":"error","message":"✘ Completions for node Assignment ([86:3, 86:22] - personaje.wlk) failed: Error: [Assignment]{cc5641} at personaje.wlk:86 exhausted all cases without a match [Assignment]{cc5641} at personaje.wlk:86 exhausted all cases without a match","stack":"Error: [Assignment]{cc5641} at personaje.wlk:86 exhausted all cases without a match\n    at c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:38:6142\n    at D2 (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:2384:42)\n    at Qh (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:2384:1092)\n    at k6n (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:2384:1248)\n    at c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:38:6131\n    at D2 (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:2384:42)\n    at c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:2384:2988\n    at c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:2393:8440\n    at c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:37:74872\n    at Ye (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:7:8527)","timestamp":"2025-10-17T12:59:36.222Z"}
{"level":"error","message":"✘ Completions for node Assignment ([86:3, 86:22] - personaje.wlk) failed: Error: [Assignment]{88909b} at personaje.wlk:86 exhausted all cases without a match [Assignment]{88909b} at personaje.wlk:86 exhausted all cases without a match","stack":"Error: [Assignment]{88909b} at personaje.wlk:86 exhausted all cases without a match\n    at c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:38:6142\n    at D2 (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:2384:42)\n    at Qh (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:2384:1092)\n    at k6n (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:2384:1248)\n    at c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:38:6131\n    at D2 (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:2384:42)\n    at c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:2384:2988\n    at c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:2393:8440\n    at c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:37:74872\n    at Ye (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:7:8527)","timestamp":"2025-10-17T12:59:39.440Z"}
{"level":"error","message":"✘ Failed to rebuild document Failed to parse personaje.wlk: \n-- PARSING FAILED --------------------------------------------------\n\n  88 | ✗ tetsVilla.\"Sembrar, regar y cosechar Tomate\".\"cosechar tomate\"\n  89 |   wollok.lang.EvaluationError: Error: Could not resolve reference to personaje.position\n> 90 |     at tetsVilla.\"Sembrar, regar y cosechar Tomate\".\"cosechar tomate\" [tetsVilla.wtest:44]\n     |                                                                                   ^\n  91 | \n  92 |  ✓ 0 passed  ✗ 1 errored\n\nExpected one of the following: \n\n'@', 'const', 'method', 'override', 'var', '{', '}', comment, not \"test\", whitespace\n","stack":"Error: Failed to parse personaje.wlk: \n-- PARSING FAILED --------------------------------------------------\n\n  88 | ✗ tetsVilla.\"Sembrar, regar y cosechar Tomate\".\"cosechar tomate\"\n  89 |   wollok.lang.EvaluationError: Error: Could not resolve reference to personaje.position\n> 90 |     at tetsVilla.\"Sembrar, regar y cosechar Tomate\".\"cosechar tomate\" [tetsVilla.wtest:44]\n     |                                                                                   ^\n  91 | \n  92 |  ✓ 0 passed  ✗ 1 errored\n\nExpected one of the following: \n\n'@', 'const', 'method', 'override', 'var', '{', '}', comment, not \"test\", whitespace\n\n    at c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:2348:13026\n    at Array.map (<anonymous>)\n    at W1n (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:2348:12950)\n    at U2.buildEnvironmentFrom (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:2393:5254)\n    at U2.updateEnvironmentWith (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:2393:4989)\n    at JF (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:2393:7383)\n    at F3.invoke (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:3:157334)\n    at o.fire (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:3:158104)\n    at c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:37:57871\n    at Zr (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:8:1561)","timestamp":"2025-10-17T12:59:56.279Z"}
{"level":"error","message":"✘ Failed to rebuild document Failed to parse personaje.wlk: \n-- PARSING FAILED --------------------------------------------------\n\n  88 | ✗ tetsVilla.\"Sembrar, regar y cosechar Tomate\".\"cosechar tomate\"\n  89 |   wollok.lang.EvaluationError: Error: Could not resolve reference to personaje.position\n> 90 |     at tetsVilla.\"Sembrar, regar y cosechar Tomate\".\"cosechar tomate\" [tetsVilla.wtest:44]\n     |                                                                                   ^\n  91 | \n  92 |  ✓ 0 passed  ✗ 1 errored\n\nExpected one of the following: \n\n'@', 'const', 'method', 'override', 'var', '{', '}', comment, not \"test\", whitespace\n","stack":"Error: Failed to parse personaje.wlk: \n-- PARSING FAILED --------------------------------------------------\n\n  88 | ✗ tetsVilla.\"Sembrar, regar y cosechar Tomate\".\"cosechar tomate\"\n  89 |   wollok.lang.EvaluationError: Error: Could not resolve reference to personaje.position\n> 90 |     at tetsVilla.\"Sembrar, regar y cosechar Tomate\".\"cosechar tomate\" [tetsVilla.wtest:44]\n     |                                                                                   ^\n  91 | \n  92 |  ✓ 0 passed  ✗ 1 errored\n\nExpected one of the following: \n\n'@', 'const', 'method', 'override', 'var', '{', '}', comment, not \"test\", whitespace\n\n    at c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:2348:13026\n    at Array.map (<anonymous>)\n    at W1n (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:2348:12950)\n    at U2.buildEnvironmentFrom (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:2393:5254)\n    at U2.updateEnvironmentWith (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:2393:4989)\n    at JF (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:2393:7383)\n    at F3.invoke (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:3:157334)\n    at o.fire (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:3:158104)\n    at c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:37:57871\n    at Zr (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:8:1561)","timestamp":"2025-10-17T12:59:59.668Z"}
{"level":"error","message":"✘ Failed to rebuild document Failed to parse personaje.wlk: \n-- PARSING FAILED --------------------------------------------------\n\n  88 | ✗ tetsVilla.\"Sembrar, regar y cosechar Tomate\".\"cosechar tomate\"\n  89 |   wollok.lang.EvaluationError: Error: Could not resolve reference to personaje.position\n> 90 |     at tetsVilla.\"Sembrar, regar y cosechar Tomate\".\"cosechar tomate\" [tetsVilla.wtest:44]\n     |                                                                                   ^\n  91 | \n  92 |  ✓ 0 passed  ✗ 1 errored\n\nExpected one of the following: \n\n'@', 'const', 'method', 'override', 'var', '{', '}', comment, not \"test\", whitespace\n","stack":"Error: Failed to parse personaje.wlk: \n-- PARSING FAILED --------------------------------------------------\n\n  88 | ✗ tetsVilla.\"Sembrar, regar y cosechar Tomate\".\"cosechar tomate\"\n  89 |   wollok.lang.EvaluationError: Error: Could not resolve reference to personaje.position\n> 90 |     at tetsVilla.\"Sembrar, regar y cosechar Tomate\".\"cosechar tomate\" [tetsVilla.wtest:44]\n     |                                                                                   ^\n  91 | \n  92 |  ✓ 0 passed  ✗ 1 errored\n\nExpected one of the following: \n\n'@', 'const', 'method', 'override', 'var', '{', '}', comment, not \"test\", whitespace\n\n    at c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:2348:13026\n    at Array.map (<anonymous>)\n    at W1n (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:2348:12950)\n    at U2.buildEnvironmentFrom (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:2393:5254)\n    at U2.updateEnvironmentWith (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:2393:4989)\n    at JF (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:2393:7383)\n    at F3.invoke (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:3:157334)\n    at o.fire (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:3:158104)\n    at c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:37:57871\n    at Zr (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:8:1561)","timestamp":"2025-10-17T13:00:05.973Z"}
{"level":"error","message":"✘ Completions for node Send ([44:4, 44:28] - tetsVilla.wtest) failed: Error: [Send]{5f83f3} at tetsVilla.wtest:44 exhausted all cases without a match [Send]{5f83f3} at tetsVilla.wtest:44 exhausted all cases without a match","stack":"Error: [Send]{5f83f3} at tetsVilla.wtest:44 exhausted all cases without a match\n    at c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:38:6142\n    at D2 (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:2384:42)\n    at c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:2384:2988\n    at c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:2393:8440\n    at c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:37:74872\n    at Ye (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:7:8527)\n    at qt (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:7:6189)\n    at ot (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:7:6378)\n    at Immediate._onImmediate (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:7:6142)\n    at process.processImmediate (node:internal/timers:485:21)","timestamp":"2025-10-17T13:02:29.873Z"}
{"level":"error","message":"✘ Completions for node Send ([44:4, 44:29] - tetsVilla.wtest) failed: Error: [Send]{c66f56} at tetsVilla.wtest:44 exhausted all cases without a match [Send]{c66f56} at tetsVilla.wtest:44 exhausted all cases without a match","stack":"Error: [Send]{c66f56} at tetsVilla.wtest:44 exhausted all cases without a match\n    at c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:38:6142\n    at D2 (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:2384:42)\n    at c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:2384:2988\n    at c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:2393:8440\n    at c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:37:74872\n    at Ye (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:7:8527)\n    at qt (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:7:6189)\n    at ot (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:7:6378)\n    at Immediate._onImmediate (c:\\Users\\janet\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.5.3\\out\\server\\src\\server.js:7:6142)\n    at process.processImmediate (node:internal/timers:485:21)","timestamp":"2025-10-17T13:02:30.297Z"}
{"level":"info","message":"🧪 Test runner executed on c:\\Users\\janet\\Desktop\\actividades wollof\\2025c2s2-granja-villa-Gladys-fp","result":{"errored":1,"failed":0,"ok":0},"testsFailed":[{"error":["wollok.lang.EvaluationError: Error: Could not resolve reference to personaje.position","  at tetsVilla.\"Sembrar, regar y cosechar Tomate\".\"cosechar tomate\" [tetsVilla.wtest:44]"],"test":"tetsVilla.\"Sembrar, regar y cosechar Tomate\".\"cosechar tomate\""}],"timeElapsed":293,"timestamp":"2025-10-17T13:02:34.850Z"}
{"level":"info","message":"🧪 Test runner executed on c:\\Users\\janet\\Desktop\\actividades wollof\\2025c2s2-granja-villa-Gladys-fp","result":{"errored":1,"failed":0,"ok":0},"testsFailed":[{"error":["wollok.lang.EvaluationError: Error: Could not resolve reference to personaje.position","  at tetsVilla.\"Sembrar, regar y cosechar Tomate\".\"cosechar tomate\" [tetsVilla.wtest:44]"],"test":"tetsVilla.\"Sembrar, regar y cosechar Tomate\".\"cosechar tomate\""}],"timeElapsed":271,"timestamp":"2025-10-17T13:02:45.908Z"}
{"level":"info","message":"🧪 Test runner executed on c:\\Users\\janet\\Desktop\\actividades wollof\\2025c2s2-granja-villa-Gladys-fp","result":{"errored":0,"failed":0,"ok":1},"testsFailed":[],"timeElapsed":250,"timestamp":"2025-10-17T13:03:19.369Z"}
{"level":"info","message":"🧪 Test runner executed on c:\\Users\\janet\\Desktop\\actividades wollof\\2025c2s2-granja-villa-Gladys-fp","result":{"errored":0,"failed":0,"ok":1},"testsFailed":[],"timeElapsed":276,"timestamp":"2025-10-17T13:03:26.992Z"}
{"level":"info","message":"🧪 Test runner executed on c:\\Users\\janet\\Desktop\\actividades wollof\\2025c2s2-granja-villa-Gladys-fp","result":{"errored":0,"failed":0,"ok":1},"testsFailed":[],"timeElapsed":268,"timestamp":"2025-10-17T13:03:35.121Z"}
{"level":"info","message":"🧪 Test runner executed on c:\\Users\\janet\\Desktop\\actividades wollof\\2025c2s2-granja-villa-Gladys-fp","result":{"errored":0,"failed":0,"ok":1},"testsFailed":[],"timeElapsed":266,"timestamp":"2025-10-17T13:03:43.325Z"}
{"level":"info","message":"🧪 Test runner executed on c:\\Users\\janet\\Desktop\\actividades wollof\\2025c2s2-granja-villa-Gladys-fp","result":{"errored":0,"failed":0,"ok":9},"testsFailed":[],"timeElapsed":315,"timestamp":"2025-10-17T13:04:25.315Z"}
